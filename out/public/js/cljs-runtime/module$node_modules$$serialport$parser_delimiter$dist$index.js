shadow$provide.module$node_modules$$serialport$parser_delimiter$dist$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.DelimiterParser=void 0;global=require("module$node_modules$stream_browserify$index");class DelimiterParser extends global.Transform{constructor({delimiter,includeDelimiter=!1,...options}){super(options);if(void 0===delimiter)throw new TypeError('"delimiter" is not a bufferable object');
if(0===delimiter.length)throw new TypeError('"delimiter" has a 0 or undefined length');this.includeDelimiter=includeDelimiter;this.delimiter=Buffer.from(delimiter);this.buffer=Buffer.alloc(0)}_transform(chunk,encoding,cb){for(chunk=Buffer.concat([this.buffer,chunk]);-1!==(encoding=chunk.indexOf(this.delimiter));)this.push(chunk.slice(0,encoding+(this.includeDelimiter?this.delimiter.length:0))),chunk=chunk.slice(encoding+this.delimiter.length);this.buffer=chunk;cb()}_flush(cb){this.push(this.buffer);
this.buffer=Buffer.alloc(0);cb()}}exports.DelimiterParser=DelimiterParser}
//# sourceMappingURL=module$node_modules$$serialport$parser_delimiter$dist$index.js.map
