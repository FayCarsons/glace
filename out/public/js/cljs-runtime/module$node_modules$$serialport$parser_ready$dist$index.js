shadow$provide.module$node_modules$$serialport$parser_ready$dist$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.ReadyParser=void 0;global=require("module$node_modules$stream_browserify$index");class ReadyParser extends global.Transform{constructor({delimiter,...options}){if(void 0===delimiter)throw new TypeError('"delimiter" is not a bufferable object');if(0===delimiter.length)throw new TypeError('"delimiter" has a 0 or undefined length');
super(options);this.delimiter=Buffer.from(delimiter);this.readOffset=0;this.ready=!1}_transform(chunk,encoding,cb){if(this.ready)return this.push(chunk),cb();encoding=this.delimiter;let chunkOffset=0;for(;this.readOffset<encoding.length&&chunkOffset<chunk.length;)encoding[this.readOffset]===chunk[chunkOffset]?this.readOffset++:this.readOffset=0,chunkOffset++;this.readOffset===encoding.length&&(this.ready=!0,this.emit("ready"),chunk=chunk.slice(chunkOffset),0<chunk.length&&this.push(chunk));cb()}}
exports.ReadyParser=ReadyParser}
//# sourceMappingURL=module$node_modules$$serialport$parser_ready$dist$index.js.map
