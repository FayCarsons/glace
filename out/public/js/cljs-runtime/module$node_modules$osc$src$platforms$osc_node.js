shadow$provide.module$node_modules$osc$src$platforms$osc_node=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;(function(){var dgram=require("shadow$empty"),net=require("shadow$empty");require("module$node_modules$ws$browser");var osc=function(target,toMerge){target=target||{};void 0===toMerge.forEach&&(toMerge=[toMerge]);toMerge.forEach(function(obj){for(var prop in obj)target[prop]=obj[prop]});return target}({},[require("module$node_modules$osc$src$osc"),
require("module$node_modules$osc$src$osc_transports"),require("module$node_modules$osc$src$platforms$osc_websocket_client"),require("module$node_modules$osc$src$platforms$osc_node_serialport_loader")]);osc.UDPPort=function(options){osc.Port.call(this,options);this.options.localAddress=this.options.localAddress||"127.0.0.1";this.options.localPort=void 0!==this.options.localPort?this.options.localPort:57121;this.options.remoteAddress=this.options.remoteAddress||"127.0.0.1";this.options.remotePort=void 0!==
this.options.remotePort?this.options.remotePort:57121;this.on("open",this.listen.bind(this));(this.socket=options.socket)&&this.emit("open",this.socket)};var p=osc.UDPPort.prototype=Object.create(osc.Port.prototype);p.constructor=osc.UDPPort;p.open=function(){var that=this;this.socket||(this.socket=dgram.createSocket("udp4"),this.socket.on("error",function(error){that.emit("error",error)}),this.socket.bind(this.options.localPort,this.options.localAddress,function(){osc.UDPPort.setupMulticast(that);
that.options.broadcast&&that.socket.setBroadcast(that.options.broadcast);that.emit("open",that.socket)}))};p.listen=function(){if(this.socket){var that=this;this.socket.on("message",function(msg,rinfo){that.emit("data",msg,rinfo)});this.socket.on("close",function(){that.emit("close")});that.emit("ready")}};p.sendRaw=function(encoded,address,port){if(this.socket){var length=void 0!==encoded.byteLength?encoded.byteLength:encoded.length,that=this;address=address||this.options.remoteAddress;port=void 0!==
port?port:this.options.remotePort;this.socket.send(encoded,0,length,port,address,function(err){err&&that.emit("error",err)})}else osc.fireClosedPortSendError(this)};p.close=function(){this.socket&&this.socket.close()};osc.UDPPort.setupMulticast=function(that){void 0!==that.options.multicastTTL&&that.socket.setMulticastTTL(that.options.multicastTTL);that.options.multicastMembership&&("string"===typeof that.options.multicastMembership&&(that.options.multicastMembership=[that.options.multicastMembership]),
that.options.multicastMembership.forEach(function(addr){"string"===typeof addr?that.socket.addMembership(addr):that.socket.addMembership(addr.address,addr.interface)}))};osc.TCPSocketPort=function(options){osc.SLIPPort.call(this,options);var o=this.options;o.address=o.address||o.localAddress||"127.0.0.1";o.port=void 0!==o.port?o.port:void 0!==o.localPort?o.localPort:57121;this.on("open",this.listen.bind(this));(this.socket=options.socket)&&this.emit("open",this.socket)};p=osc.TCPSocketPort.prototype=
Object.create(osc.SLIPPort.prototype);p.constructor=osc.TCPSocketPort;p.open=function(address,port){var o=this.options;address=address||o.address;port=void 0!==port?port:o.port;this.socket?this.socket.connect(port,address):this.socket=net.connect({port,host:address});this.emit("open",this.socket)};p.listen=function(){var that=this;this.socket.on("data",function(msg){that.emit("data",msg,void 0)});this.socket.on("error",function(err){that.emit("error",err)});this.socket.on("close",function(hadError){that.emit("close",
hadError)});this.socket.on("connect",function(){that.emit("ready")})};p.sendRaw=function(encoded){if(this.socket){encoded=Buffer.from(encoded);try{this.socket.write(encoded)}catch(err){this.emit("error",err)}}};p.close=function(){this.socket.end()};module.exports=osc})()}
//# sourceMappingURL=module$node_modules$osc$src$platforms$osc_node.js.map
