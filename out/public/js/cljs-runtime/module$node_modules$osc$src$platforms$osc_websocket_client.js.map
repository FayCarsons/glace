{
"version":3,
"file":"module$node_modules$osc$src$platforms$osc_websocket_client.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/osc/src/platforms/osc-websocket-client.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$osc$src$platforms$osc_websocket_client\"] = function(global,require,module,exports) {\n/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Cross-Platform Web Socket client transport for osc.js.\n *\n * Copyright 2014-2016, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*global WebSocket, require*/\n\nvar osc = osc || require(\"../osc.js\");\n\n(function () {\n\n    \"use strict\";\n\n    osc.WebSocket = typeof WebSocket !== \"undefined\" ? WebSocket : require (\"ws\");\n\n    osc.WebSocketPort = function (options) {\n        osc.Port.call(this, options);\n        this.on(\"open\", this.listen.bind(this));\n\n        this.socket = options.socket;\n        if (this.socket) {\n            if (this.socket.readyState === 1) {\n                osc.WebSocketPort.setupSocketForBinary(this.socket);\n                this.emit(\"open\", this.socket);\n            } else {\n                this.open();\n            }\n        }\n    };\n\n    var p = osc.WebSocketPort.prototype = Object.create(osc.Port.prototype);\n    p.constructor = osc.WebSocketPort;\n\n    p.open = function () {\n        if (!this.socket || this.socket.readyState > 1) {\n            this.socket = new osc.WebSocket(this.options.url);\n        }\n\n        osc.WebSocketPort.setupSocketForBinary(this.socket);\n\n        var that = this;\n        this.socket.onopen = function () {\n            that.emit(\"open\", that.socket);\n        };\n\n        this.socket.onerror = function (err) {\n            that.emit(\"error\", err);\n        };\n    };\n\n    p.listen = function () {\n        var that = this;\n        this.socket.onmessage = function (e) {\n            that.emit(\"data\", e.data, e);\n        };\n\n        this.socket.onclose = function (e) {\n            that.emit(\"close\", e);\n        };\n\n        that.emit(\"ready\");\n    };\n\n    p.sendRaw = function (encoded) {\n        if (!this.socket || this.socket.readyState !== 1) {\n            osc.fireClosedPortSendError(this);\n            return;\n        }\n\n        this.socket.send(encoded);\n    };\n\n    p.close = function (code, reason) {\n        this.socket.close(code, reason);\n    };\n\n    osc.WebSocketPort.setupSocketForBinary = function (socket) {\n        socket.binaryType = osc.isNode ? \"nodebuffer\" : \"arraybuffer\";\n    };\n\n}());\n\n};"],
"names":["shadow$provide","global","require","module","exports","osc","WebSocket","WebSocketPort","osc.WebSocketPort","options","Port","call","on","listen","bind","socket","readyState","setupSocketForBinary","emit","open","p","prototype","Object","create","constructor","p.open","url","that","onopen","this.socket.onopen","onerror","this.socket.onerror","err","p.listen","onmessage","this.socket.onmessage","e","data","onclose","this.socket.onclose","sendRaw","p.sendRaw","encoded","send","fireClosedPortSendError","close","p.close","code","reason","osc.WebSocketPort.setupSocketForBinary","binaryType","isNode"]
}
