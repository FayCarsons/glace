shadow$provide.module$node_modules$$serialport$parser_cctalk$dist$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.CCTalkParser=void 0;global=require("module$node_modules$stream_browserify$index");class CCTalkParser extends global.Transform{constructor(maxDelayBetweenBytesMs=50){super();this.array=[];this.lastByteFetchTime=this.cursor=0;this.maxDelayBetweenBytesMs=
maxDelayBetweenBytesMs}_transform(buffer,encoding,cb){0<this.maxDelayBetweenBytesMs&&(encoding=Date.now(),encoding-this.lastByteFetchTime>this.maxDelayBetweenBytesMs&&(this.array=[],this.cursor=0),this.lastByteFetchTime=encoding);this.cursor+=buffer.length;for(Array.from(buffer).map(byte=>this.array.push(byte));1<this.cursor&&this.cursor>=this.array[1]+5;)buffer=this.array[1]+5,encoding=Buffer.from(this.array.slice(0,buffer)),this.array=this.array.slice(encoding.length,this.array.length),this.cursor-=
buffer,this.push(encoding);cb()}}exports.CCTalkParser=CCTalkParser}
//# sourceMappingURL=module$node_modules$$serialport$parser_cctalk$dist$index.js.map
