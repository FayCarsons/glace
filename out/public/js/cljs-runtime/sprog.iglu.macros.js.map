{"version":3,"sources":["sprog/iglu/macros.cljc"],"mappings":";AAGA,AAAA,iCAAA,yCAAAA,1EAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,oEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,sEAAA,tEAAME,iFAAcM,EAAIC;AAAxB,AACE,IAAOD,QAAEA;IACFC,YAAMA;;AADb,AAEE,oBAAIA;AACF,IAAMC,OAAK,AAACL,gBAAMI;IACZE,WAAS,EAAI,AAACC,qBAAKF,OACR,AAACG,+CAAO,KAAAC,eAAA,2BAAA,KAAAA,eAAA,WAAA,KAAA,IAAA,OAAA,IAAA,zEAAM,AAACT,gBAAMK,+BACPF,iCACN,AAACF,eAAKI,OACd,KAAAI,eAAA,UAAA,KAAAA,eAAA,WAAA,KAAA,IAAA,OAAA,IAAA,xDAAMJ,8BAAKF;AAL5B,AAME,eAAOG;eAAS,AAACL,eAAKG;;;;;AACxBD;;;;;;AAXN,CAAA,yDAAA,zDAAMN;;AAAN;AAAA,CAAA,mDAAA,WAAAC,9DAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAaA,AAAA,gCAAA,wCAAAP,xEAAMmB;AAAN,AAAA,IAAAlB,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAkB,mEAAA,CAAA,UAAA,MAAAf;;;AAAA,AAAA,CAAA,qEAAA,rEAAMe,gFAAaP,EAAIC;AAAvB,AACE,IAAOD,QAAEA;IACFC,YAAMA;;AADb,AAEE,oBAAIA;AACF,IAAMC,OAAK,AAACL,gBAAMI;IACZE,WAAS,EAAI,AAACC,qBAAKF,OACR,AAACG,sDAAO,KAAAC,eAAA,2BAAA,KAAA,IAAA,/BAAM,AAACT,gBAAMK,sBACb,AAACJ,eAAKI,wDACN,KAAAI,eAAA,WAAA,KAAA,IAAA,fAAMN,4BACd,KAAAM,eAAA,UAAA,KAAAA,eAAA,WAAA,KAAA,IAAA,OAAA,IAAA,xDAAMJ,8BAAKF;AAL5B,AAME,eAAOG;eAAS,AAACL,eAAKG;;;;;AACxBD;;;;;;AAXN,CAAA,wDAAA,xDAAMO;;AAAN;AAAA,CAAA,kDAAA,WAAAC,7DAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAZ,gBAAAW;IAAAA,eAAA,AAAAV,eAAAU;AAAA,AAAA,IAAAT,qBAAA;AAAA,AAAA,OAAAA,wDAAAU,SAAAD;;;AAAA,AAaA,mCAAA,2CAAA,AAAA,qFAAA,AAAA,nKAAKE,oIACEhB,uFACCa","names":["var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","sprog.iglu.macros/thread-first","seq43286","G__43287","cljs.core/first","cljs.core/next","self__5751__auto__","x","forms","form","threaded","cljs.core/seq?","cljs.core.concat","cljs.core/List","sprog.iglu.macros/thread-last","seq43296","G__43297","sprog.iglu.macros/default-macros"],"sourcesContent":["(ns sprog.iglu.macros\n  (:require [clojure.walk :refer [prewalk]]))\n\n(defn thread-first [x & forms]\n  (loop [x x\n         forms forms]\n    (if forms\n      (let [form (first forms)\n            threaded (if (seq? form)\n                       (concat (list (first form)\n                                     x)\n                               (next form))\n                       (list form x))]\n        (recur threaded (next forms)))\n      x)))\n\n(defn thread-last [x & forms]\n  (loop [x x\n         forms forms]\n    (if forms\n      (let [form (first forms)\n            threaded (if (seq? form)\n                       (concat (list (first form))\n                               (next form)\n                               (list x))\n                       (list form x))]\n        (recur threaded (next forms)))\n      x)))\n\n(def default-macros\n  {'-> thread-first\n   '->> thread-last})\n"]}