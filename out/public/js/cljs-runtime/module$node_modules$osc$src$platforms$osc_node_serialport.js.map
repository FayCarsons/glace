{
"version":3,
"file":"module$node_modules$osc$src$platforms$osc_node_serialport.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/osc/src/platforms/osc-node-serialport.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$osc$src$platforms$osc_node_serialport\"] = function(global,require,module,exports) {\n/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Node.js serial transport for osc.js\n *\n * Copyright 2014-2019, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*jshint node:true*/\n\nvar osc = osc || require(\"../osc.js\"),\n    SerialPort = require(\"serialport\");\n\nosc.supportsSerial = true;\n\nosc.SerialPort = function (options) {\n    this.on(\"open\", this.listen.bind(this));\n    osc.SLIPPort.call(this, options);\n    this.options.bitrate = this.options.bitrate || 9600;\n\n    this.serialPort = options.serialPort;\n    if (this.serialPort) {\n        this.emit(\"open\", this.serialPort);\n    }\n};\n\nvar p = osc.SerialPort.prototype = Object.create(osc.SLIPPort.prototype);\np.constructor = osc.SerialPort;\n\np.open = function () {\n    if (this.serialPort) {\n        // If we already have a serial port, close it and open a new one.\n        this.once(\"close\", this.open.bind(this));\n        this.close();\n        return;\n    }\n\n    var that = this;\n\n    this.serialPort = new SerialPort(this.options.devicePath, {\n        baudRate: this.options.bitrate,\n        autoOpen: false\n    });\n\n    this.serialPort.on(\"error\", function (err) {\n        that.emit(\"error\", err);\n    });\n\n    this.serialPort.on(\"open\", function () {\n        that.emit(\"open\", that.serialPort);\n    });\n\n    this.serialPort.open();\n};\n\np.listen = function () {\n    var that = this;\n\n    this.serialPort.on(\"data\", function (data) {\n        that.emit(\"data\", data, undefined);\n    });\n\n    this.serialPort.on(\"close\", function () {\n        that.emit(\"close\");\n    });\n\n    that.emit(\"ready\");\n};\n\np.sendRaw = function (encoded) {\n    if (!this.serialPort || !this.serialPort.isOpen) {\n        osc.fireClosedPortSendError(this);\n        return;\n    }\n\n    var that = this;\n    this.serialPort.write(encoded);\n};\n\np.close = function () {\n    if (this.serialPort) {\n        this.serialPort.close();\n    }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","osc","SerialPort","supportsSerial","osc.SerialPort","options","on","listen","bind","SLIPPort","call","bitrate","serialPort","emit","p","prototype","Object","create","constructor","open","p.open","once","close","that","devicePath","baudRate","autoOpen","err","p.listen","data","undefined","sendRaw","p.sendRaw","encoded","isOpen","write","fireClosedPortSendError","p.close"]
}
