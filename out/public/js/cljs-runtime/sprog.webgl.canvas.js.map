{"version":3,"sources":["sprog/webgl/canvas.cljs"],"mappings":"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","names":["sprog.webgl.canvas/create-gl-canvas","canvas","js/document.createElement","gl","js/document.body","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","sprog.webgl.canvas/maximize-gl-canvas","p__30901","map__30906","cljs.core/--destructure-map","cljs.core.get","seq30887","G__30888","cljs.core/first","cljs.core/next","self__5751__auto__","max-pixel-ratio","vec__30912","cljs.core.nth","raw-width","js/window.innerWidth","raw-height","js/window.innerHeight","pixel-ratio","x__5131__auto__","y__5132__auto__","js/window.devicePixelRatio","style","max-resolution","width","height","cljs.core.mapv","cljs.core.partial","cljs.core/*","Math/floor","x__5128__auto__","y__5129__auto__","sprog.webgl.canvas/square-maximize-gl-canvas","p__30930","map__30931","seq30928","G__30929","raw-size","size","sprog.webgl.canvas/save-image","name","blob","a","js/document.body.appendChild","url","js/window.URL.createObjectURL","js/document.body.removeChild"],"sourcesContent":["(ns sprog.webgl.canvas\n  (:require [sprog.util :as u]))\n\n(defn create-gl-canvas []\n  (let [canvas (js/document.createElement \"canvas\")\n        gl (.getContext canvas \"webgl2\")]\n    (set! (.-position canvas.style) \"absolute\")\n    (.appendChild js/document.body canvas)\n    gl))\n\n(defn maximize-gl-canvas [gl & {:keys [max-pixel-ratio]}]\n  (let [canvas (.-canvas gl)\n        raw-width js/window.innerWidth\n        raw-height js/window.innerHeight\n        pixel-ratio (if max-pixel-ratio\n                      (min js/window.devicePixelRatio max-pixel-ratio)\n                      js/window.devicePixelRatio)\n        style canvas.style\n        max-resolution (.getParameter gl gl.MAX_TEXTURE_SIZE)\n        [width height] (mapv (partial *\n                                      (Math/floor\n                                       (min pixel-ratio\n                                            (/ max-resolution\n                                               (max raw-width raw-height)))))\n                             [raw-width raw-height])]\n    (set! (.-left style) 0)\n    (set! (.-top style) 0)\n    (set! (.-width style) (str raw-width \"px\"))\n    (set! (.-height style) (str raw-height \"px\"))\n    (set! (.-width canvas) width)\n    (set! (.-height canvas) height)))\n\n(defn square-maximize-gl-canvas [gl & {:keys [max-pixel-ratio]}]\n  (let [canvas (.-canvas gl)\n        raw-width js/window.innerWidth\n        raw-height js/window.innerHeight\n        raw-size (min raw-width raw-height)\n        pixel-ratio (if max-pixel-ratio\n                      (min js/window.devicePixelRatio max-pixel-ratio)\n                      js/window.devicePixelRatio)\n        style canvas.style\n        max-resolution (.getParameter gl gl.MAX_TEXTURE_SIZE)\n        size (* raw-size\n                (Math/floor\n                 (min pixel-ratio\n                      (/ max-resolution raw-size))))]\n    (set! (.-left style) (* (- raw-width raw-size) 0.5))\n    (set! (.-top style) (* (- raw-height raw-size) 0.5))\n    (set! (.-width style) (str raw-size \"px\"))\n    (set! (.-height style) (str raw-size \"px\"))\n    (set! (.-width canvas) size)\n    (set! (.-height canvas) size)))\n\n(defn save-image [gl name]\n  (.toBlob gl.canvas\n           (fn [blob]\n             (let [a (js/document.createElement \"a\")]\n               (js/document.body.appendChild a)\n               (let [url (js/window.URL.createObjectURL blob)]\n                 (set! a.href url)\n                 (set! a.download (str name \".png\"))\n                 (.click a))\n               (js/document.body.removeChild a)))))\n"]}