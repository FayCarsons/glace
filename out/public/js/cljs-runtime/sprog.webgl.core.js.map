{"version":3,"sources":["sprog/webgl/core.cljs"],"mappings":"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","names":["js/sprog","js/sprog.webgl","js/sprog.webgl.core","js/sprog.webgl.core.sprogs-atom","sprog.webgl.core/sprogs-atom","cljs.core.atom","sprog.webgl.core/update-sprogs!","seq__31179","cljs.core/seq","chunk__31181","count__31182","i__31183","temp__5804__auto__","cljs.core/chunked-seq?","c__5565__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","sprog","cljs.core/deref","cljs.core/vals","map__31191","cljs.core/--destructure-map","cljs.core.get","map__31196","state","gl","update-fn","cljs.core.swap_BANG_","cljs.core/assoc","js/requestAnimationFrame","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","sprog.webgl.core/start-sprog!","p__31203","vec__31204","map__31207","cljs.core.nth","seq31200","G__31201","G__31202","self__5751__auto__","init-fn-or-value","canvas","name","append-to-body?","preserve-drawing-buffer?","stencil?","old-canvas","js/document.getElementById","sprog.dom.canvas.get_context","cljs.core/boolean","sprog.dom.canvas.create_context","cljs.core/fn?","G__31213","sprog.webgl.core/stop-sprog!","js/Error","sprog-name","cljs.core/dissoc","sprog.webgl.core.stop_sprog_BANG_","sprog.webgl.core/sprog-state","seq31215","self__5752__auto__","G__31222","fexpr__31221","or__5043__auto__","G__31233","sprog.webgl.core/set-sprog-state!","new-state","cljs.core/update","cljs.core/reset!","sprog.webgl.core.set_sprog_state_BANG_","G__31238","sprog.webgl.core/update-sprog-state!","cljs.core.get_in","sprog.webgl.core.update_sprog_state_BANG_","G__31245","sprog.webgl.core/merge-sprog-state!","new-state-map","p1__31243#","cljs.core.merge","sprog.webgl.core.merge_sprog_state_BANG_","sprog.webgl.core/sprog-context","seq31246","G__31248","fexpr__31247","sprog.webgl.core/clear!","seq31251","G__31252","clear-masks","cljs.core.apply","cljs.core/bit-or","p1__31250#","cljs.core.map","fexpr__31258","sprog.webgl.core/enable!","seq31259","G__31260","enable-values","seq__31261","chunk__31262","count__31263","i__31264","enable-value","fexpr__31282","fexpr__31284","sprog.webgl.core/disable!","seq31285","G__31286","seq__31287","chunk__31288","count__31289","i__31290","fexpr__31303","fexpr__31322","sprog.webgl.core/set-stencil-func!","p__31348","vec__31349","seq31325","G__31326","G__31327","func","ref","mask","fexpr__31352","G__31354","sprog.webgl.core/set-stencil-op!","fail","zfail","zpass","vec__31358","gl-fail","gl-zfail","gl-zpass","op-param","fexpr__31364","all","sprog.webgl.core.set_stencil_op_BANG_","G__31372","sprog.webgl.core/set-color-mask!","r","g","b","a","all-channels","sprog.webgl.core.set_color_mask_BANG_"],"sourcesContent":["(ns sprog.webgl.core\n  (:require [sprog.util :as u]\n            [sprog.dom.canvas :refer [create-context\n                                      get-context]]))\n\n(defonce sprogs-atom (atom nil))\n\n(defn update-sprogs! []\n  (doseq [sprog (vals @sprogs-atom)]\n    (when-let [{:keys [state gl update-fn]} sprog]\n      (swap! state assoc :gl gl)\n      (when update-fn (swap! state update-fn))\n      (swap! state assoc :gl gl)))\n  (js/requestAnimationFrame update-sprogs!))\n\n(defn start-sprog! [init-fn-or-value\n                    update-fn\n                    & [{:keys [canvas \n                               name\n                               append-to-body?\n                               preserve-drawing-buffer?\n                               stencil?]\n                        :or {name :default\n                             append-to-body? true}}]]\n  (when-let [old-canvas (js/document.getElementById (str name))]\n    (.removeChild old-canvas.parentNode old-canvas))\n  (when (nil? @sprogs-atom) (update-sprogs!))\n  (let [gl (if canvas\n             (get-context canvas \n                          {\"preserveDrawingBuffer\"\n                           (boolean preserve-drawing-buffer?)\n                           \"stencil\"\n                           (boolean stencil?)})\n             (create-context\n              name\n              {:canvas-element canvas\n               :append-to-body? append-to-body?\n               :preserve-drawing-buffer? preserve-drawing-buffer?\n               :stencil? stencil?}))]\n    (swap! sprogs-atom\n           assoc\n           name\n           {:state (atom\n                    (if (fn? init-fn-or-value)\n                      (init-fn-or-value gl)\n                      init-fn-or-value))\n            :gl gl\n            :update-fn update-fn})))\n\n(defn stop-sprog!\n  ([sprog-name] (swap! sprogs-atom dissoc sprog-name))\n  ([] (stop-sprog! :default)))\n\n(defn sprog-state [& sprog-name]\n  @(:state (@sprogs-atom (or sprog-name :default))))\n\n(defn set-sprog-state!\n  ([sprog-name new-state]\n   (swap! sprogs-atom\n          update\n          sprog-name\n          update\n          :state\n          (fn [state]\n            (reset! state new-state)\n            state))\n   new-state)\n  ([new-state]\n   (set-sprog-state! :default new-state)))\n\n(defn update-sprog-state!\n  ([sprog-name update-fn]\n   (swap! (get-in @sprogs-atom [sprog-name :state])\n          update-fn)\n   @(get-in @sprogs-atom [sprog-name :state]))\n  ([update-fn]\n   (update-sprog-state! :default update-fn)))\n\n(defn merge-sprog-state!\n  ([sprog-name new-state-map]\n   (update-sprog-state! sprog-name #(merge % new-state-map)))\n  ([new-state-map] (merge-sprog-state! :default new-state-map)))\n\n(defn sprog-context [& sprog-name]\n  (:gl (@sprogs-atom (or sprog-name :default))))\n\n(defn clear! [gl & clear-masks]\n  (.clear gl (apply bit-or (map #(or ({:color gl.COLOR_BUFFER_BIT\n                                       :depth gl.DEPTH_BUFFER_BIT\n                                       :stencil gl.STENCIL_BUFFER_BIT\n                                       :all (bit-or gl.COLOR_BUFFER_BIT\n                                                    gl.DEPTH_BUFFER_BIT\n                                                    gl.STENCIL_BUFFER_BIT)}\n                                      %)\n                                     %)\n                                clear-masks))))\n\n(defn enable! [gl & enable-values]\n  (doseq [enable-value enable-values]\n    (.enable gl\n             (or ({:blend gl.BLEND\n                   :cull-face gl.CULL_FACE\n                   :depth-test gl.DEPTH_TEST\n                   :dither gl.DITHER\n                   :polygon-offset-fill gl.POLYGON_OFFSET_FILL\n                   :sample-alpha-to-coverage gl.SAMPLE_ALPHA_TO_COVERAGE\n                   :sample-coverage gl.SAMPLE_COVERAGE\n                   :scissor-test gl.SCISSOR_TEST\n                   :stencil-test gl.STENCIL_TEST}\n                  enable-value)\n                 enable-value))))\n\n(defn disable! [gl & enable-values]\n  (doseq [enable-value enable-values]\n    (.disable gl\n              (or ({:blend gl.BLEND\n                    :cull-face gl.CULL_FACE\n                    :depth-test gl.DEPTH_TEST\n                    :dither gl.DITHER\n                    :polygon-offset-fill gl.POLYGON_OFFSET_FILL\n                    :sample-alpha-to-coverage gl.SAMPLE_ALPHA_TO_COVERAGE\n                    :sample-coverage gl.SAMPLE_COVERAGE\n                    :scissor-test gl.SCISSOR_TEST\n                    :stencil-test gl.STENCIL_TEST}\n                   enable-value)\n                  enable-value))))\n\n(defn set-stencil-func! [gl func & [ref mask]]\n  (.stencilFunc gl\n                (or ({:never gl.NEVER\n                      :less gl.LESS\n                      :< gl.LESS\n                      :equal gl.EQUAL\n                      := gl.EQUAL\n                      :lequal gl.LEQUAL\n                      :<= gl.LEQUAL\n                      :greater gl.GREATER\n                      :> gl.GREATER\n                      :not-equal gl.NOTEQUAL\n                      :not= gl.NOTEQUAL\n                      :gequal gl.GEQUAL\n                      :>= gl.GEQUAL\n                      :always gl.ALWAYS} func)\n                    func)\n                (or ref 0)\n                (or mask 0xff)))\n\n(defn set-stencil-op!\n  ([gl fail zfail zpass]\n   (let [[gl-fail gl-zfail gl-zpass]\n         (map (fn [op-param]\n                (or ({:keep gl.KEEP\n                      :zero gl.ZERO\n                      0 gl.ZERO\n                      :replace gl.REPLACE\n                      :incr gl.INCR\n                      :inc gl.INCR\n                      :incr-wrap gl.INCR_WRAP\n                      :inc-wrap gl.INCR_WRAP\n                      :decr gl.DECR\n                      :dec gl.DEC\n                      :decr-wrap gl.DECR_WARP\n                      :invert gl.INVERT}\n                     op-param)\n                    op-param\n                    gl.KEEP))\n              [fail zfail zpass])]\n     (.stencilOp gl gl-fail gl-zfail gl-zpass)))\n  ([gl all]\n   (set-stencil-op! gl all all all)))\n\n(defn set-color-mask!\n  ([gl r g b a]\n   (.colorMask gl (boolean r) (boolean g) (boolean b) (boolean a)))\n  ([gl all-channels]\n   (set-color-mask! gl all-channels all-channels all-channels all-channels)))\n"]}