shadow$provide.module$node_modules$$serialport$bindings_cpp$dist$index=function(global,require,module,exports$jscomp$0){var process=require("module$node_modules$process$browser");"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k);o[k2]=m[k]});global=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||
Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};module=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports$jscomp$0,"__esModule",{value:!0});exports$jscomp$0.autoDetect=void 0;module=module(require("module$node_modules$debug$src$browser"));const darwin_1=require("module$node_modules$$serialport$bindings_cpp$dist$darwin"),linux_1=require("module$node_modules$$serialport$bindings_cpp$dist$linux"),win32_1=
require("module$node_modules$$serialport$bindings_cpp$dist$win32"),debug=(0,module.default)("serialport/bindings-cpp");global(require("module$node_modules$$serialport$bindings_cpp$node_modules$$serialport$bindings_interface$dist$index"),exports$jscomp$0);global(require("module$node_modules$$serialport$bindings_cpp$dist$darwin"),exports$jscomp$0);global(require("module$node_modules$$serialport$bindings_cpp$dist$linux"),exports$jscomp$0);global(require("module$node_modules$$serialport$bindings_cpp$dist$win32"),
exports$jscomp$0);global(require("module$node_modules$$serialport$bindings_cpp$dist$errors"),exports$jscomp$0);exports$jscomp$0.autoDetect=function(){switch(process.platform){case "win32":return debug("loading WindowsBinding"),win32_1.WindowsBinding;case "darwin":return debug("loading DarwinBinding"),darwin_1.DarwinBinding;default:return debug("loading LinuxBinding"),linux_1.LinuxBinding}}}
//# sourceMappingURL=module$node_modules$$serialport$bindings_cpp$dist$index.js.map
