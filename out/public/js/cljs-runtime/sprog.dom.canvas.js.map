{"version":3,"sources":["sprog/dom/canvas.cljs"],"mappings":";AAGA,AAAA,oCAAA,4CAAAA,hFAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,uEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,yEAAA,cAAAG,vFAAMD,oFAAkBU;AAAxB,AAAA,IAAAR,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;4BAAA,AAAAE,4CAAAF,eAAA,nFAAqCS;qCAArC,AAAAP,4CAAAF,eAAA,5FACqCU;qBADrC,AAAAR,4CAAAF,eAAA,5EAEqCW;AAFrC,AAGE,IAAMC,SAAO,uBAAA,vBAACC;IACRC,KAAG,kBAAA,lBACCF,2BAEA,qBAAA,2CAAA,2EAAA,3IAACG,wFAAiC,AAACC,mBAAQN,0CACvB,AAACM,mBAAQL;AALvC,AAME,CAAM,AAAMC,YAAQ,4CAAKJ;;AACzB,oBAAMC;AAAN,AACE,yBAAA,xBAAM,AAAY,AAAAG;;AAClB,AAAcK,0BAAiBL;;AAFjC;;AAGAE;;;AAbJ,CAAA,4DAAA,5DAAMhB;;AAAN;AAAA,CAAA,sDAAA,WAAAK,jEAAML;AAAN,AAAA,IAAAM,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAeA,AAAA,mCAAA,2CAAAX,9EAAM0B;AAAN,AAAA,IAAAzB,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAyB,sEAAA,CAAA,UAAA,MAAAtB;;;AAAA,AAAA,CAAA,wEAAA,kBAAAuB,1FAAMD,mFAAiBN;AAAvB,AAAA,IAAAQ,aAAAD;IAAAC,iBAAA,AAAAnB,4BAAAmB;sBAAA,AAAAlB,4CAAAkB,eAAA,7EAAwCG;oBAAxC,AAAArB,4CAAAkB,eAAA,3EAAwDI;AAAxD,AACE,IAAMC,YAAUC;IACVC,aAAWC;IACXC,cAAY,kBAAIN,iBACF,iBAAAO,kBAAKE;IAALD,kBAAgCR;AAAhC,AAAA,SAAAO,kBAAAC,mBAAAD,kBAAAC;KACAC;IACdC,QAAM,AAAArB;AALZ,AAME,oBAAIY;AACF,IAAMU,WAAS,iBAAAJ,kBAAKL;IAALM,kBAAeJ;AAAf,AAAA,SAAAG,kBAAAC,mBAAAD,kBAAAC;;IACTF,kBAAY,kBAAIN,iBACF,iBAAAO,kBAAKE;IAALD,kBAAgCR;AAAhC,AAAA,SAAAO,kBAAAC,mBAAAD,kBAAAC;KACAC;IACdG,OAAK,CAAGD,WAASL;AAJvB,AAKE,CAAM,AAAQI,aAAO,0BAAA,zBAAG,CAAGR,YAAUS;;AACrC,CAAM,AAAOD,YAAO,2BAAA,1BAAG,CAAGN,aAAWO;;AACrC,CAAM,AAASD,cAAO,uDAAA,VAAKC;;AAC3B,CAAM,AAAUD,eAAO,uDAAA,VAAKC;;AAC5B,CAAM,AAAStB,eAAQuB;;AACvB,QAAM,AAAUvB,gBAAQuB;;AAC1B,IAAAC,aAAqB,2HAAA,3HAACI,6CAAK,AAACC,gDAAQC,iBAAEb,gGACVJ,UAAUE;YADtC,AAAAU,4CAAAD,WAAA,IAAA,nEAAOE;aAAP,AAAAD,4CAAAD,WAAA,IAAA,pEAAaG;AAAb,AAEE,cAAA,bAAM,AAAQN;;AACd,aAAA,ZAAM,AAAOA;;AACb,CAAM,AAASA,cAAO,wDAAA,XAAKR;;AAC3B,CAAM,AAAUQ,eAAO,yDAAA,ZAAKN;;AAC5B,CAAM,AAASf,eAAQ0B;;AACvB,QAAM,AAAU1B,gBAAQ2B;;;;AA1BhC,CAAA,2DAAA,3DAAMrB;;AAAN;AAAA,CAAA,qDAAA,WAAAG,hEAAMH;AAAN,AAAA,IAAAI,WAAA,AAAAjB,gBAAAgB;IAAAA,eAAA,AAAAf,eAAAe;AAAA,AAAA,IAAAd,qBAAA;AAAA,AAAA,OAAAA,wDAAAe,SAAAD;;;AAAA,AA4BA,AAAA,sCAAA,8CAAA7B,pFAAMmD;AAAN,AAAA,IAAAlD,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAkD,yEAAA,CAAA,UAAA,MAAA/C;;;AAAA,AAAA,CAAA,2EAAA,3EAAM+C,sFAAoB7B,GAAKgC;AAA/B,AACE,OAACC,8CAAM,AAACN,gDAAQvB,iCAAgB,AAAAJ,WAAWgC;;;AAD7C,CAAA,8DAAA,9DAAMH;;AAAN;AAAA,CAAA,wDAAA,WAAAC,nEAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAxC,gBAAAuC;IAAAA,eAAA,AAAAtC,eAAAsC;AAAA,AAAA,IAAArC,qBAAA;AAAA,AAAA,OAAAA,wDAAAsC,SAAAD;;;AAAA,AAGA,AAAA,iCAAA,yCAAApD,1EAAMwD;AAAN,AAAA,IAAAvD,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAuD,oEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAApD;;;AAAA,AAAA,CAAA,sEAAA,mCAAAqD,zGAAMD,iFAAepC,OAAO0C;AAA5B,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAjD,4BAAAiD;sBAAA,AAAAhD,4CAAAgD,eAAA,7EAAuD3B;AAAvD,AACE,IAAMM,cAAY,kBAAIN,iBACF,iBAAAO,kBAAKE;IAALD,kBAAgCR;AAAhC,AAAA,SAAAO,kBAAAC,mBAAAD,kBAAAC;KACAC;IACdC,QAAM,AAAArB;IAHZ2C,aAIqB,wCAAA,tCAAI,OAASD,kHACVA,iBAAiBA,yBAClBA;YANvB,AAAAjB,4CAAAkB,WAAA,IAAA,nEAIOjB;aAJP,AAAAD,4CAAAkB,WAAA,IAAA,pEAIahB;IAGPd,YAAUC;IACVC,aAAWC;IARjB4B,aASiC,6CAAA,WAAAG,xDAACnB;AAAD,AAAO,QAAAmB,mBAAK9B;GAAZ,mFAA0BS,MAAMC;kBATjE,AAAAF,4CAAAmB,WAAA,IAAA,zEASOC;mBATP,AAAApB,4CAAAmB,WAAA,IAAA,1EASmBE;AATnB,AAUE,CAAM,AAAQzB,aAAO,iBAAA2B,kBAAA;IAAAC,kBACK,CAAA,MAAO,CAAGpC,YAAUgC;AADzB,AAAA,SAAAG,kBAAAC,mBAAAD,kBAAAC;;;AAErB,CAAM,AAAO5B,YAAO,iBAAA2B,kBAAA;IAAAC,kBACK,CAAA,MAAO,CAAGlC,aAAW+B;AAD1B,AAAA,SAAAE,kBAAAC,mBAAAD,kBAAAC;;;AAEpB,CAAM,AAAS5B,cAAO,oEAAA,vBAAK,CAAGK,QAAMT;;AACpC,CAAM,AAAUI,eAAO,qEAAA,xBAAK,CAAGM,SAAOV;;AACtC,CAAM,AAASjB,eAAQ0B;;AACvB,QAAM,AAAU1B,gBAAQ2B;;;AAlB5B,CAAA,yDAAA,zDAAMS;;AAAN;AAAA,CAAA,mDAAA,WAAAG,9DAAMH;AAAN,AAAA,IAAAI,WAAA,AAAA/C,gBAAA8C;IAAAA,eAAA,AAAA7C,eAAA6C;IAAAE,WAAA,AAAAhD,gBAAA8C;IAAAA,eAAA,AAAA7C,eAAA6C;AAAA,AAAA,IAAA5C,qBAAA;AAAA,AAAA,OAAAA,wDAAA6C,SAAAC,SAAAF;;;AAAA,AAoBA,AAAA,oCAAA,4CAAA3D,hFAAMsE;AAAN,AAAA,IAAArE,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAqE,uEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAlE;;;AAAA,AAAA,CAAA,yEAAA,zEAAMkE,oFAAkBhD,GAAGwC,iBAAmBR;AAA9C,AACE,OAACC,8CAAM,AAACN,gDAAQO,+BAAc,AAAAlC,UAAUwC,kBAAkBR;;;AAD5D,CAAA,4DAAA,5DAAMgB;;AAAN;AAAA,CAAA,sDAAA,WAAAC,jEAAMD;AAAN,AAAA,IAAAE,WAAA,AAAA3D,gBAAA0D;IAAAA,eAAA,AAAAzD,eAAAyD;IAAAE,WAAA,AAAA5D,gBAAA0D;IAAAA,eAAA,AAAAzD,eAAAyD;AAAA,AAAA,IAAAxD,qBAAA;AAAA,AAAA,OAAAA,wDAAAyD,SAAAC,SAAAF;;;AAAA,AAGA,qCAAA,rCAAMG,kFAAmBpD;AAAzB,AAAA,0FACG,AAAA,AAAAA,gBAAgB,AAAA,AAAAA;;AAEnB,8BAAA,9BAAMqD,oEAAYvD,OAAOwD;AAAzB,AACE,OAASxD,cACA,WAAKyD;AAAL,AACE,IAAMC,IAAE,uBAAA,vBAACzD;AAAT,AACE,AAAC0D,0BAA6BD;;AAC9B,IAAME,YAAI,AAACC,2BAA8BJ;AAAzC,AACE,CAAM,AAAAC,SAAOE;;AACb,CAAM,AAAAF,aAAW,mDAAA,NAAKF;;AACtB,AAAQE;;AACV,OAACI,0BAA6BJ;;;AAE7C,6CAAA,7CAAMK,kGAA2BC;AAAjC,AACE,QAAMC,sCACA,4DAAA,5DAAC9B,8CAAM+B,kBACA,4CAAA,WAAAC,vDAACC;AAAD,AAAM,IAAMC,MAAI,AAAAF,0BAAA;AAAV,AACE,GAAI,kEAAA,lEAACG,6CAAE,AAACC,gBAAMF;AACZ,QAAA,gDAASA;;AACTA;;GACLL","names":["var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","sprog.dom.canvas/create-gl-canvas","p__44104","map__44105","cljs.core/--destructure-map","cljs.core.get","seq44102","G__44103","cljs.core/first","cljs.core/next","self__5751__auto__","id","append-to-body?","preserve-drawing-buffer?","stencil?","canvas","js/document.createElement","gl","cljs.core/clj->js","cljs.core/boolean","js/document.body","sprog.dom.canvas/maximize-canvas","p__44109","map__44110","seq44107","G__44108","max-pixel-ratio","square?","raw-width","js/window.innerWidth","raw-height","js/window.innerHeight","pixel-ratio","x__5131__auto__","y__5132__auto__","js/window.devicePixelRatio","style","raw-size","size","vec__44111","cljs.core.nth","width","height","cljs.core.mapv","cljs.core.partial","cljs.core/*","sprog.dom.canvas/maximize-gl-canvas","seq44121","G__44122","options","cljs.core.apply","sprog.dom.canvas/resize-canvas","p__44127","map__44128","seq44124","G__44125","G__44126","pixel-dimensions","vec__44129","vec__44132","style-width","style-height","p1__44123#","x__5128__auto__","y__5129__auto__","sprog.dom.canvas/resize-gl-canvas","seq44135","G__44136","G__44137","sprog.dom.canvas/canvas-resolution","sprog.dom.canvas/save-image","name","blob","a","js/document.body.appendChild","url","js/window.URL.createObjectURL","js/document.body.removeChild","sprog.dom.canvas/set-page-background-color","color","js/document.body.style.backgroundColor","cljs.core/str","p1__44142#","cljs.core.map","hex","cljs.core._EQ_","cljs.core/count"],"sourcesContent":["(ns sprog.dom.canvas\n  (:require [sprog.util :as u]))\n\n(defn create-gl-canvas [id & {:keys [append-to-body?\n                                     preserve-drawing-buffer?\n                                     stencil?]}]\n  (let [canvas (js/document.createElement \"canvas\")\n        gl (.getContext\n            canvas\n            \"webgl2\"\n            (clj->js {\"preserveDrawingBuffer\" (boolean preserve-drawing-buffer?)\n                      \"stencil\" (boolean stencil?)}))]\n    (set! (.-id canvas) (str id))\n    (when append-to-body?\n      (set! (.-position canvas.style) \"absolute\")\n      (.appendChild js/document.body canvas))\n    gl))\n\n(defn maximize-canvas [canvas & {:keys [max-pixel-ratio square?]}]\n  (let [raw-width js/window.innerWidth\n        raw-height js/window.innerHeight\n        pixel-ratio (if max-pixel-ratio\n                      (min js/window.devicePixelRatio max-pixel-ratio)\n                      js/window.devicePixelRatio)\n        style canvas.style]\n    (if square?\n      (let [raw-size (min raw-width raw-height)\n            pixel-ratio (if max-pixel-ratio\n                          (min js/window.devicePixelRatio max-pixel-ratio)\n                          js/window.devicePixelRatio)\n            size (* raw-size pixel-ratio)]\n        (set! (.-left style) (* (- raw-width raw-size) 0.5))\n        (set! (.-top style) (* (- raw-height raw-size) 0.5))\n        (set! (.-width style) (str raw-size \"px\"))\n        (set! (.-height style) (str raw-size \"px\"))\n        (set! (.-width canvas) size)\n        (set! (.-height canvas) size))\n      (let [[width height] (mapv (partial * pixel-ratio)\n                                 [raw-width raw-height])]\n        (set! (.-left style) 0)\n        (set! (.-top style) 0)\n        (set! (.-width style) (str raw-width \"px\"))\n        (set! (.-height style) (str raw-height \"px\"))\n        (set! (.-width canvas) width)\n        (set! (.-height canvas) height)))))\n\n(defn maximize-gl-canvas [gl & options]\n  (apply (partial maximize-canvas gl.canvas) options))\n\n(defn resize-canvas [canvas pixel-dimensions & {:keys [max-pixel-ratio]}]\n  (let [pixel-ratio (if max-pixel-ratio\n                      (min js/window.devicePixelRatio max-pixel-ratio)\n                      js/window.devicePixelRatio)\n        style canvas.style\n        [width height] (if (number? pixel-dimensions)\n                         [pixel-dimensions pixel-dimensions]\n                         pixel-dimensions)\n        raw-width js/window.innerWidth\n        raw-height js/window.innerHeight\n        [style-width style-height] (mapv #(/ % pixel-ratio) [width height])]\n    (set! (.-left style) (max 0\n                              (* 0.5 (- raw-width style-width))))\n    (set! (.-top style) (max 0\n                             (* 0.5 (- raw-height style-height))))\n    (set! (.-width style) (str (/ width pixel-ratio) \"px\"))\n    (set! (.-height style) (str (/ height pixel-ratio) \"px\"))\n    (set! (.-width canvas) width)\n    (set! (.-height canvas) height)))\n\n(defn resize-gl-canvas [gl pixel-dimensions & options]\n  (apply (partial resize-canvas gl.canvas pixel-dimensions) options))\n\n(defn canvas-resolution [gl]\n  [gl.canvas.width gl.canvas.height])\n\n(defn save-image [canvas name]\n  (.toBlob canvas\n           (fn [blob]\n             (let [a (js/document.createElement \"a\")]\n               (js/document.body.appendChild a)\n               (let [url (js/window.URL.createObjectURL blob)]\n                 (set! a.href url)\n                 (set! a.download (str name \".png\"))\n                 (.click a))\n               (js/document.body.removeChild a))))) \n\n(defn set-page-background-color [color]\n  (set! js/document.body.style.backgroundColor\n        (apply str \"#\"\n               (map #(let [hex (.toString % 16)]\n                       (if (= (count hex) 1)\n                         (str \"0\" hex)\n                         hex))\n                    color))))\n"]}