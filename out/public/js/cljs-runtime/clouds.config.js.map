{"version":3,"sources":["clouds/config.cljs"],"mappings":";AAWA,AAAKA,wBAAQ,CAAA,QAAS,sBAAA,rBAAK,SAAA,IAAA,bAACC;AAE5B,yBAAA,zBAAKC;AAEL,iCAAA,jCAAKC;AACL,mCAAA,nCAAKC;AACL,4BAAA,5BAAKC;AAEL,AAAKC,wBAAQ,eAAA,AAAA,0DAAA,mFAAA,IAAA,IAAA,pKAACC;AACd,AAAKC,0BAAU,eAAA,AAAA,0DAAA,mFAAA,IAAA,IAAA,pKAACD;AAChB,+BAAA,/BAAKE;AAEL,2BAAA,3BAAKC;AACL,+BAAA,/BAAKC;AACL,6BAAA,7BAAKC;AAEL,0BAAA,1BAAKC;AACL,mCAAA,nCAAKC;AACL,8BAAA,9BAAKC;AAEL,AAAKC,0BAAU,eAAA,AAAA,fAACT,yEAAW,6CAAA,WAAAU,xDAACC;AAAD,AAAO,QAAAD,mBAAA;GAAP,mFAAA,KAAA,MAAA;AAI3B,4BAAA,5BAAKE;AACL,AAAKC,0BAAUR;AAEf,AAAKS,oBAAI,0BAAA,zBAAG,CAAA,MACG,UAAA,VAACC","names":["clouds.config/u32-max","Math/pow","clouds.config/infinity","clouds.config/steps-per-sample","clouds.config/bounces-per-sample","clouds.config/max-bounces","clouds.config/cam-pos","cljs.core/cons","clouds.config/light-pos","clouds.config/scatter-radius","clouds.config/atlas-size","clouds.config/atlas-tex-size","clouds.config/cloud-extent","clouds.config/num-cells","clouds.config/perlin-worley-enum","clouds.config/perlin?","clouds.config/sky-color","p1__64795#","cljs.core.mapv","clouds.config/cloud-start","clouds.config/cloud-end","clouds.config/phi","Math/sqrt"],"sourcesContent":["(ns clouds.config)\n\n;scene in bounding volume\n;light source infinitely far away\n;when leaving bounding volume do dot product of ray.dir \n;and dir of sun\n\n;start at pure white - when surface hit multiply surface color by hit object\n\n;skip frag \n\n(def u32-max (* 0.999 (dec (Math/pow 2 32))))\n\n(def infinity ##Inf)\n\n(def steps-per-sample 1)\n(def bounces-per-sample 1)\n(def max-bounces 1024)\n\n(def cam-pos (cons 'vec3 [0 0 1]))\n(def light-pos (cons 'vec3 [1 0 1]))\n(def scatter-radius 0.9)\n\n(def atlas-size 8)\n(def atlas-tex-size 204)\n(def cloud-extent 100)\n\n(def num-cells 2)\n(def perlin-worley-enum 1) ;to alternate between perlin and worley in atlas frag\n(def perlin? :perlin)\n\n(def sky-color (cons 'vec3 (mapv #(* % 0.7)\n                                 [0.09 0.333 0.81])))\n\n\n(def cloud-start 0)\n(def cloud-end cloud-extent)\n\n(def phi (/ (+ 1\n               (Math/sqrt 5))\n            2))\n"]}