shadow$provide.module$node_modules$osc$src$osc_transports=function(global,require,module,exports){var osc=osc||require("module$node_modules$osc$src$osc"),slip=slip||require("module$node_modules$slip$src$slip"),EventEmitter=EventEmitter||require("module$node_modules$events$events").EventEmitter;(function(){osc.supportsSerial=!1;osc.firePacketEvents=function(port,packet,timeTag,packetInfo){packet.address?port.emit("message",packet,timeTag,packetInfo):osc.fireBundleEvents(port,packet,timeTag,packetInfo)};
osc.fireBundleEvents=function(port,bundle,timeTag,packetInfo){port.emit("bundle",bundle,timeTag,packetInfo);for(timeTag=0;timeTag<bundle.packets.length;timeTag++)osc.firePacketEvents(port,bundle.packets[timeTag],bundle.timeTag,packetInfo)};osc.fireClosedPortSendError=function(port,msg){port.emit("error",msg||"Can't send packets on a closed osc.Port object. Please open (or reopen) this Port by calling open().")};osc.Port=function(options){this.options=options||{};this.on("data",this.decodeOSC.bind(this))};
var p=osc.Port.prototype=Object.create(EventEmitter.prototype);p.constructor=osc.Port;p.send=function(oscPacket){var args=Array.prototype.slice.call(arguments),encoded=this.encodeOSC(oscPacket);encoded=osc.nativeBuffer(encoded);args[0]=encoded;this.sendRaw.apply(this,args)};p.encodeOSC=function(packet){packet=packet.buffer?packet.buffer:packet;try{var encoded=osc.writePacket(packet,this.options)}catch(err){this.emit("error",err)}return encoded};p.decodeOSC=function(data,packetInfo){data=osc.byteArray(data);
this.emit("raw",data,packetInfo);try{var packet=osc.readPacket(data,this.options);this.emit("osc",packet,packetInfo);osc.firePacketEvents(this,packet,void 0,packetInfo)}catch(err){this.emit("error",err)}};osc.SLIPPort=function(options){var that=this;options=this.options=options||{};options.useSLIP=void 0===options.useSLIP?!0:options.useSLIP;this.decoder=new slip.Decoder({onMessage:this.decodeOSC.bind(this),onError:function(err){that.emit("error",err)}});this.on("data",(options.useSLIP?this.decodeSLIPData:
this.decodeOSC).bind(this))};p=osc.SLIPPort.prototype=Object.create(osc.Port.prototype);p.constructor=osc.SLIPPort;p.encodeOSC=function(packet){packet=packet.buffer?packet.buffer:packet;try{var encoded=osc.writePacket(packet,this.options);var framed=slip.encode(encoded)}catch(err){this.emit("error",err)}return framed};p.decodeSLIPData=function(data,packetInfo){this.decoder.decode(data,packetInfo)};osc.relay=function(from,to,eventName,sendFnName,transformFn,sendArgs){eventName=eventName||"message";
sendFnName=sendFnName||"send";transformFn=transformFn||function(){};sendArgs=sendArgs?[null].concat(sendArgs):[];var listener=function(data){sendArgs[0]=data;transformFn(data);to[sendFnName].apply(to,sendArgs)};from.on(eventName,listener);return{eventName,listener}};osc.relayPorts=function(from,to,o){return osc.relay(from,to,o.raw?"raw":"osc",o.raw?"sendRaw":"send",o.transform)};osc.stopRelaying=function(from,relaySpec){from.removeListener(relaySpec.eventName,relaySpec.listener)};osc.Relay=function(port1,
port2,options){(this.options=options||{}).raw=!1;this.port1=port1;this.port2=port2;this.listen()};p=osc.Relay.prototype=Object.create(EventEmitter.prototype);p.constructor=osc.Relay;p.open=function(){this.port1.open();this.port2.open()};p.listen=function(){this.port1Spec&&this.port2Spec&&this.close();this.port1Spec=osc.relayPorts(this.port1,this.port2,this.options);this.port2Spec=osc.relayPorts(this.port2,this.port1,this.options);var closeListener=this.close.bind(this);this.port1.on("close",closeListener);
this.port2.on("close",closeListener)};p.close=function(){osc.stopRelaying(this.port1,this.port1Spec);osc.stopRelaying(this.port2,this.port2Spec);this.emit("close",this.port1,this.port2)};"undefined"!==typeof module&&module.exports&&(module.exports=osc)})()}
//# sourceMappingURL=module$node_modules$osc$src$osc_transports.js.map
