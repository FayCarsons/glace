shadow$provide.module$node_modules$$serialport$parser_packet_length$dist$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.PacketLengthParser=void 0;global=require("module$node_modules$stream_browserify$index");class PacketLengthParser extends global.Transform{constructor(options={}){super(options);const {delimiter=170,packetOverhead=2,lengthBytes=1,lengthOffset=1,
maxLen=255}=options;this.opts={delimiter,packetOverhead,lengthBytes,lengthOffset,maxLen};this.buffer=Buffer.alloc(0);this.start=!1}_transform(chunk,encoding,cb){for(encoding=0;encoding<chunk.length;encoding++){var byte=chunk[encoding];byte===this.opts.delimiter&&(this.start=!0);!0===this.start&&(this.buffer=Buffer.concat([this.buffer,Buffer.from([byte])]),this.buffer.length>=this.opts.lengthOffset+this.opts.lengthBytes&&(byte=this.buffer.readUIntLE(this.opts.lengthOffset,this.opts.lengthBytes),this.buffer.length==
byte+this.opts.packetOverhead||byte>this.opts.maxLen))&&(this.push(this.buffer),this.buffer=Buffer.alloc(0),this.start=!1)}cb()}_flush(cb){this.push(this.buffer);this.buffer=Buffer.alloc(0);cb()}}exports.PacketLengthParser=PacketLengthParser}
//# sourceMappingURL=module$node_modules$$serialport$parser_packet_length$dist$index.js.map
