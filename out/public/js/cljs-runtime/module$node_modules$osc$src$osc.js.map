{
"version":3,
"file":"module$node_modules$osc$src$osc.js",
"lineCount":29,
"mappings":"AAAAA,cAAA,CAAA,+BAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC5F,IAAIC,QAAUH,OAAA,CAAQ,qCAAR,CAAd,CACII,OAASJ,OAAA,CAAQ,kCAAR,CAAkBI,CAAAA,MAD/B,CAWIC,IAAMA,GAANA,EAAa,EAEhB,UAAS,EAAG,CAITA,GAAIC,CAAAA,UAAJ,CAAiB,UACjBD,IAAIE,CAAAA,MAAJ,CAAa,UAEbF,IAAIG,CAAAA,QAAJ,CAAe,CACXC,SAAU,CAAA,CADC,CAEXC,iBAAkB,CAAA,CAFP,CAMfL,IAAIM,CAAAA,UAAJ,CAAmC,WAAlB,GAAA,MAAOV,OAAP,EAAiCA,MAAOC,CAAAA,OAAxC,CAAkD,CAAA,CAAlD,CAAyD,CAAA,CAG1EG,IAAIO,CAAAA,MAAJ,CAAaP,GAAIM,CAAAA,UAAjB,EAAiD,WAAjD,GAA+B,MAAOE,OAGtCR,IAAIS,CAAAA,UAAJ,CAAoC,WAAnB,GAAA,MAAOX,QAAP,EACbA,OAAQY,CAAAA,QADK;AACOZ,OAAQY,CAAAA,QAASC,CAAAA,QADxB,CACmC,CAAA,CADnC,CAC0C,CAAA,CAG3DX,IAAIY,CAAAA,WAAJ,CAAkBZ,GAAIO,CAAAA,MAAtB,EAAgCP,GAAIS,CAAAA,UAGpCT,IAAIa,CAAAA,OAAJ,CAAcC,QAAS,CAACC,GAAD,CAAM,CACzB,MAAOA,IAAP,EAAsD,gBAAtD,GAAcC,MAAOC,CAAAA,SAAUC,CAAAA,QAASC,CAAAA,IAA1B,CAA+BJ,GAA/B,CADW,CAK7Bf,IAAIoB,CAAAA,gBAAJ,CAAuBC,QAAS,CAACN,GAAD,CAAM,CAClC,MAAOA,IAAIO,CAAAA,MAAX,EAAqBP,GAAIO,CAAAA,MAAzB,WAA2CC,YADT,CAKtCvB,IAAIwB,CAAAA,QAAJ,CAAeC,QAAS,CAACV,GAAD,CAAM,CAC1B,MAAOf,IAAIY,CAAAA,WAAX,EAA0BG,GAA1B,WAAyChB,OADf,CAK9BC,IAAI0B,CAAAA,IAAJ,CAA2B,WAAhB,GAAA,MAAOA,KAAP,CAA8BA,IAA9B,CACP1B,GAAIO,CAAAA,MAAJ,CAAaZ,OAAA,CAAQ,mCAAR,CAAb,CAA+BgC,IAAAA,EAInC3B,IAAI4B,CAAAA,WAAJ,CAAyC,WAAvB,GAAA,MAAOA,YAAP,CAAqC,IAAIA,WAAJ,CAAgB,OAAhB,CAArC;AACE,WAAhB,GAAA,MAAOC,KAAP,EAA+B,OAA6B,WAA7B,GAAQA,IAAKD,CAAAA,WAAb,CAA/B,CAA2E,IAAIC,IAAKD,CAAAA,WAAT,CAAqB,OAArB,CAA3E,CAA2GD,IAAAA,EAE/G3B,IAAI8B,CAAAA,WAAJ,CAAyC,WAAvB,GAAA,MAAOA,YAAP,CAAqC,IAAIA,WAAJ,CAAgB,OAAhB,CAArC,CACE,WAAhB,GAAA,MAAOD,KAAP,EAA+B,OAA6B,WAA7B,GAAQA,IAAKC,CAAAA,WAAb,CAA/B,CAA2E,IAAID,IAAKC,CAAAA,WAAT,CAAqB,OAArB,CAA3E,CAA2GH,IAAAA,EAS/G3B,IAAI+B,CAAAA,QAAJ,CAAeC,QAAS,CAACjB,GAAD,CAAMkB,MAAN,CAAcC,MAAd,CAAsB,CAC1C,MAAInB,IAAIO,CAAAA,MAAR,CACW,IAAIa,QAAJ,CAAapB,GAAIO,CAAAA,MAAjB,CAAyBW,MAAzB,CAAiCC,MAAjC,CADX,CAIInB,GAAJ,WAAmBQ,YAAnB,CACW,IAAIY,QAAJ,CAAapB,GAAb,CAAkBkB,MAAlB,CAA0BC,MAA1B,CADX,CAIO,IAAIC,QAAJ,CAAa,IAAIC,UAAJ,CAAerB,GAAf,CAAb,CAAkCkB,MAAlC,CAA0CC,MAA1C,CATmC,CAsB9ClC,IAAIqC,CAAAA,SAAJ,CAAgBC,QAAS,CAACvB,GAAD,CAAM,CAC3B,GAAIA,GAAJ;AAAmBqB,UAAnB,CACI,MAAOrB,IAGX,KAAIwB,IAAMxB,GAAIO,CAAAA,MAAJ,CAAaP,GAAIO,CAAAA,MAAjB,CAA0BP,GAEpC,IAAI,EAAEwB,GAAF,WAAiBhB,YAAjB,EAAwD,WAAxD,GAAkC,MAAOgB,IAAIL,CAAAA,MAA7C,EAAsF,QAAtF,GAAuE,MAAOK,IAA9E,CAAJ,CACI,KAAUC,MAAJ,CAAU,gEAAV,CACFC,IAAKC,CAAAA,SAAL,CAAe3B,GAAf,CAAoB,IAApB,CAA0B,CAA1B,CADE,CAAN,CAQJ,MAAO,KAAIqB,UAAJ,CAAeG,GAAf,CAhBoB,CA8B/BvC,IAAI2C,CAAAA,YAAJ,CAAmBC,QAAS,CAAC7B,GAAD,CAAM,CAC9B,MAAIf,IAAIY,CAAAA,WAAR,CACWZ,GAAIwB,CAAAA,QAAJ,CAAaT,GAAb,CAAA,CAAoBA,GAApB,CACHhB,MAAO8C,CAAAA,IAAP,CAAY9B,GAAIO,CAAAA,MAAJ,CAAaP,GAAb,CAAmB,IAAIqB,UAAJ,CAAerB,GAAf,CAA/B,CAFR,CAKOf,GAAIoB,CAAAA,gBAAJ,CAAqBL,GAArB,CAAA,CAA4BA,GAA5B,CAAkC,IAAIqB,UAAJ,CAAerB,GAAf,CANX,CAUlCf,IAAI8C,CAAAA,aAAJ,CAAoBC,QAAS,CAACC,MAAD,CAASC,MAAT,CAAiBhB,MAAjB,CAAyB,CAClD,GAAIjC,GAAIoB,CAAAA,gBAAJ,CAAqB4B,MAArB,CAAJ;AAAoChD,GAAIoB,CAAAA,gBAAJ,CAAqB6B,MAArB,CAApC,CACIA,MAAOC,CAAAA,GAAP,CAAWF,MAAX,CAAmBf,MAAnB,CADJ,KAEO,CACH,IACIkB,IAAMC,IAAKC,CAAAA,GAAL,CAASJ,MAAOf,CAAAA,MAAhB,CAAyBD,MAAzB,CAAiCe,MAAOd,CAAAA,MAAxC,CADV,CAGSoB,EAAI,CAAb,KAAgBC,MAAhB,CAHuB5B,IAAAA,EAAX6B,GAAAvB,MAAAuB,CAAuB,CAAvBA,CAA2BvB,MAGvC,CAA2BqB,CAA3B,CAA+BH,GAA/B,CAAoCG,CAAA,EAAA,CAAKC,MAAA,EAAzC,CACIN,MAAA,CAAOM,MAAP,CAAA,CAAYP,MAAA,CAAOM,CAAP,CALb,CASP,MAAOL,OAZ2C,CAsBtDjD,IAAIyD,CAAAA,UAAJ,CAAiBC,QAAS,CAACC,EAAD,CAAKC,WAAL,CAAkB,CAIxC,IAJwC,IACpCC,UAAY,EADwB,CAEpCC,IAAMF,WAAYE,CAAAA,GAEtB,CAAOA,GAAP,CAAaH,EAAGI,CAAAA,UAAhB,CAA4BD,GAAA,EAA5B,CAAmC,CAC/B,IAAIE,SAAWL,EAAGM,CAAAA,QAAH,CAAYH,GAAZ,CACf,IAAiB,CAAjB,GAAIE,QAAJ,CACIH,SAAUK,CAAAA,IAAV,CAAeF,QAAf,CADJ,KAEO,CACHF,GAAA,EACA,MAFG,CAJwB,CAYnCF,WAAYE,CAAAA,GAAZ,CADOA,GACP,CADa,CACb,CADmB,CAAA,CAMnB,OAAO,CAHO9D,GAAIY,CAAAA,WAAJuD,CAAkBnE,GAAIyD,CAAAA,UAAWW,CAAAA,UAAjCD,CACVnE,GAAI4B,CAAAA,WAAJ,CAAkB5B,GAAIyD,CAAAA,UAAWY,CAAAA,eAAjC;AAAmDrE,GAAIyD,CAAAA,UAAWa,CAAAA,GAE/D,EAAQT,SAAR,CArBiC,CAwB5C7D,IAAIyD,CAAAA,UAAWa,CAAAA,GAAf,CAAqBC,QAAS,CAACV,SAAD,CAAY,CAQtC,IALA,IAAIW,IAAM,EAAV,CAKSlB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBO,SAAU3B,CAAAA,MAA9B,CAAsCoB,CAAtC,EAJgBmB,GAIhB,CACID,GAAA,EAAOE,MAAOC,CAAAA,YAAaC,CAAAA,KAApB,CAA0B,IAA1B,CAAgCf,SAAUgB,CAAAA,KAAV,CAAgBvB,CAAhB,CAAmBA,CAAnB,CAL3BmB,GAK2B,CAAhC,CAGX,OAAOD,IAZ+B,CAe1CxE,IAAIyD,CAAAA,UAAWY,CAAAA,eAAf,CAAiCS,QAAS,CAACjB,SAAD,CAAY,CAC9CkB,SAAAA,CAAO,IAAIC,SAAJ,CAAcnB,SAAd,CACX,OAAO7D,IAAI4B,CAAAA,WAAYqD,CAAAA,MAAhB,CAAuBF,SAAvB,CAF2C,CAKtD/E,IAAIyD,CAAAA,UAAWW,CAAAA,UAAf,CAA4Bc,QAAS,CAACrB,SAAD,CAAY,CAC7C,MAAO9D,OAAO8C,CAAAA,IAAP,CAAYgB,SAAZ,CAAuB3C,CAAAA,QAAvB,CAAgC,OAAhC,CADsC,CAUjDlB,IAAImF,CAAAA,WAAJ,CAAkBC,QAAS,CAACZ,GAAD,CAAM,CAAA,IAEzBa,QAAUrF,GAAIY,CAAAA,WAAJ,CAAkBZ,GAAImF,CAAAA,WAAYf,CAAAA,UAAlC,CACVpE,GAAI8B,CAAAA,WAAJ;AAAkB9B,GAAImF,CAAAA,WAAYG,CAAAA,eAAlC,CAAoD,IACvCd,IAAbe,EAAmB,MAFvB,KAGIC,UAEAH,QAAJ,GACIG,UADJ,CACiBH,OAAA,CAAQE,GAAR,CADjB,CAQA,KAf6B,IAWzBpC,IAAMkC,OAAA,CAAUG,UAAWtD,CAAAA,MAArB,CAA8BqD,GAAWrD,CAAAA,MAXtB,CAazBuD,IAAM,IAAIrD,UAAJ,CADOe,GACP,CADa,CACb,CADmB,CAAA,CACnB,CAbmB,CAepBG,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,GAApB,CAA0B,CAA1B,CAA6BG,CAAA,EAA7B,CAAkC,CAC9B,IAAIU,SAAWqB,OAAA,CAAUG,UAAA,CAAWlC,CAAX,CAAV,CAA0BiC,GAAWG,CAAAA,UAAX,CAAsBpC,CAAtB,CACzCmC,IAAA,CAAInC,CAAJ,CAAA,CAASU,QAFqB,CAKlC,MAAOyB,IApBsB,CAuBjCzF,IAAImF,CAAAA,WAAYG,CAAAA,eAAhB,CAAkCK,QAAS,CAACnB,GAAD,CAAM,CAC7C,MAAOxE,IAAI8B,CAAAA,WAAY8D,CAAAA,MAAhB,CAAuBpB,GAAvB,CADsC,CAIjDxE,IAAImF,CAAAA,WAAYf,CAAAA,UAAhB,CAA6ByB,QAAS,CAACrB,GAAD,CAAM,CACxC,MAAOzE,OAAO8C,CAAAA,IAAP,CAAY2B,GAAZ,CADiC,CAK5CxE,IAAI8F,CAAAA,aAAJ,CAAoBC,QAAS,CAACpC,EAAD,CAAKqC,UAAL,CAAiBC,QAAjB,CAA2BrC,WAA3B,CAAwC,CAC7DsC,EAAAA,CAAMvC,EAAA,CAAGqC,UAAH,CAAA,CAAepC,WAAYE,CAAAA,GAA3B;AAAgC,CAAA,CAAhC,CACVF,YAAYE,CAAAA,GAAZ,EAAmBmC,QAEnB,OAAOC,GAJ0D,CAQrElG,IAAImG,CAAAA,cAAJ,CAAqBC,QAAS,CAACF,GAAD,CAAMvC,EAAN,CAAU0C,UAAV,CAAsBJ,QAAtB,CAAgChE,MAAhC,CAAwC,CAClEA,MAAA,CAAoBN,IAAAA,EAAX,GAAAM,MAAA,CAAuB,CAAvB,CAA2BA,MAG/B0B,GAAL,CAII8B,QAJJ,CAIU,IAAIrD,UAAJ,CAAeuB,EAAGrC,CAAAA,MAAlB,CAJV,EACImE,QACA,CADM,IAAIrD,UAAJ,CAAe6D,QAAf,CACN,CAAAtC,EAAA,CAAK,IAAIxB,QAAJ,CAAasD,QAAInE,CAAAA,MAAjB,CAFT,CAOAqC,GAAA,CAAG0C,UAAH,CAAA,CAAepE,MAAf,CAAuBiE,GAAvB,CAA4B,CAAA,CAA5B,CAEA,OAAOT,SAb2D,CAuBtEzF,IAAIsG,CAAAA,SAAJ,CAAgBC,QAAS,CAAC5C,EAAD,CAAKC,WAAL,CAAkB,CACvC,MAAO5D,IAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,UAAtB,CAAkC,CAAlC,CAAqCC,WAArC,CADgC,CAW3C5D,IAAIwG,CAAAA,UAAJ,CAAiBC,QAAS,CAACP,GAAD,CAAMvC,EAAN,CAAU1B,MAAV,CAAkB,CACxC,MAAOjC,IAAImG,CAAAA,cAAJ,CAAmBD,GAAnB,CAAwBvC,EAAxB,CAA4B,UAA5B,CAAwC,CAAxC,CAA2C1B,MAA3C,CADiC,CAW5CjC,IAAI0G,CAAAA,SAAJ,CAAgBC,QAAS,CAAChD,EAAD;AAAKC,WAAL,CAAkB,CAAA,IACnCgD,KAAO5G,GAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,UAAtB,CAAkC,CAAlC,CAAqCC,WAArC,CACPiD,GAAAA,CAAM7G,GAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,UAAtB,CAAkC,CAAlC,CAAqCC,WAArC,CAEV,OAAI5D,IAAI0B,CAAAA,IAAR,CACW,IAAI1B,GAAI0B,CAAAA,IAAR,CAAamF,EAAb,CAAkBD,IAAlB,CADX,CAGW,CACGA,IADH,CAEHC,IAAKA,EAFF,CAGHC,SAAU,CAAA,CAHP,CAP4B,CAsB3C9G,IAAI+G,CAAAA,UAAJ,CAAiBC,QAAS,CAACd,GAAD,CAAMvC,EAAN,CAAU1B,MAAV,CAAkB,CACxC,IAAIwD,IAAM,IAAIrD,UAAJ,CAAe,CAAf,CACVqD,IAAIvC,CAAAA,GAAJ,CAAQlD,GAAImG,CAAAA,cAAJ,CAAmBD,GAAIU,CAAAA,IAAvB,CAA6BjD,EAA7B,CAAiC,UAAjC,CAA6C,CAA7C,CAAgD1B,MAAhD,CAAR,CAAiE,CAAjE,CACAwD,IAAIvC,CAAAA,GAAJ,CAAQlD,GAAImG,CAAAA,cAAJ,CAAmBD,GAAIW,CAAAA,GAAvB,CAA6BlD,EAA7B,CAAiC,UAAjC,CAA6C,CAA7C,CAAgD1B,MAAhD,CAAyD,CAAzD,CAAR,CAAqE,CAArE,CACA,OAAOwD,IAJiC,CAc5CzF,IAAIiH,CAAAA,WAAJ,CAAkBC,QAAS,CAACvD,EAAD,CAAKC,WAAL,CAAkB,CACzC,MAAO5D,IAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,YAAtB,CAAoC,CAApC,CAAuCC,WAAvC,CADkC,CAW7C5D,IAAImH,CAAAA,YAAJ;AAAmBC,QAAS,CAAClB,GAAD,CAAMvC,EAAN,CAAU1B,MAAV,CAAkB,CAC1C,MAAOjC,IAAImG,CAAAA,cAAJ,CAAmBD,GAAnB,CAAwBvC,EAAxB,CAA4B,YAA5B,CAA0C,CAA1C,CAA6C1B,MAA7C,CADmC,CAW9CjC,IAAIqH,CAAAA,WAAJ,CAAkBC,QAAS,CAAC3D,EAAD,CAAKC,WAAL,CAAkB,CACzC,MAAO5D,IAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,YAAtB,CAAoC,CAApC,CAAuCC,WAAvC,CADkC,CAW7C5D,IAAIuH,CAAAA,YAAJ,CAAmBC,QAAS,CAACtB,GAAD,CAAMvC,EAAN,CAAU1B,MAAV,CAAkB,CAC1C,MAAOjC,IAAImG,CAAAA,cAAJ,CAAmBD,GAAnB,CAAwBvC,EAAxB,CAA4B,YAA5B,CAA0C,CAA1C,CAA6C1B,MAA7C,CADmC,CAW9CjC,IAAIyH,CAAAA,UAAJ,CAAiBC,QAAS,CAAC/D,EAAD,CAAKC,WAAL,CAAkB,CACpCI,EAAAA,CAAWhE,GAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,WAAtB,CAAmC,CAAnC,CAAsCC,WAAtC,CACf,OAAOc,OAAOC,CAAAA,YAAP,CAAoBX,EAApB,CAFiC,CAa5ChE,IAAI2H,CAAAA,WAAJ,CAAkBC,QAAS,CAACpD,GAAD,CAAMb,EAAN,CAAU1B,MAAV,CAAkB,CACrC+B,GAAAA,CAAWQ,GAAIkB,CAAAA,UAAJ,CAAe,CAAf,CACf,IAAI,EAAa/D,IAAAA,EAAb,GAAAqC,GAAA,EAAqC,CAAC,CAAtC,CAA0BA,GAA1B,CAAJ,CAIA,MAAOhE,IAAImG,CAAAA,cAAJ,CAAmBnC,GAAnB;AAA6BL,EAA7B,CAAiC,WAAjC,CAA8C,CAA9C,CAAiD1B,MAAjD,CANkC,CAgB7CjC,IAAI6H,CAAAA,QAAJ,CAAeC,QAAS,CAACnE,EAAD,CAAKC,WAAL,CAAkB,CAAA,IAClCT,IAAMnD,GAAIsG,CAAAA,SAAJ,CAAc3C,EAAd,CAAkBC,WAAlB,CAD4B,CAElCmE,UAAa5E,GAAb4E,CAAmB,CAAnBA,CAAyB,CAAA,CACzBC,GAAAA,CAAO,IAAI5F,UAAJ,CAAeuB,EAAGrC,CAAAA,MAAlB,CAA0BsC,WAAYE,CAAAA,GAAtC,CAA2CX,GAA3C,CAEXS,YAAYE,CAAAA,GAAZ,EAAmBiE,SAEnB,OAAOC,GAP+B,CAgB1ChI,IAAIiI,CAAAA,SAAJ,CAAgBC,QAAS,CAACnD,IAAD,CAAO,CAC5BA,IAAA,CAAO/E,GAAIqC,CAAAA,SAAJ,CAAc0C,IAAd,CADqB,KAGxB5B,IAAM4B,IAAKhB,CAAAA,UAHa,CAOxB0B,IAAM,IAAIrD,UAAJ,EAHOe,GAGP,CAHa,CAGb,CAHmB,CAAA,CAGnB,EAFGlB,CAEH,CAPkB,CAQxB0B,GAAK,IAAIxB,QAAJ,CAAasD,GAAInE,CAAAA,MAAjB,CAGTtB,IAAIwG,CAAAA,UAAJ,CAAerD,GAAf,CAAoBQ,EAApB,CAIA8B,IAAIvC,CAAAA,GAAJ,CAAQ6B,IAAR,CAVa9C,CAUb,CAEA,OAAOwD,IAjBqB,CA2BhCzF,IAAImI,CAAAA,aAAJ,CAAoBC,QAAS,CAACzE,EAAD,CAAKC,WAAL,CAAkB,CACvCyE,EAAAA,CAAO,IAAIjG,UAAJ,CAAeuB,EAAGrC,CAAAA,MAAlB,CAA0BsC,WAAYE,CAAAA,GAAtC,CAA2C,CAA3C,CACXF,YAAYE,CAAAA,GAAZ;AAAmB,CAEnB,OAAOuE,GAJoC,CAa/CrI,IAAIsI,CAAAA,cAAJ,CAAqBC,QAAS,CAACC,KAAD,CAAQ,CAClCA,KAAA,CAAQxI,GAAIqC,CAAAA,SAAJ,CAAcmG,KAAd,CAER,KAAI/C,IAAM,IAAIrD,UAAJ,CAAe,CAAf,CACVqD,IAAIvC,CAAAA,GAAJ,CAAQsF,KAAR,CAEA,OAAO/C,IAN2B,CAgBtCzF,IAAIyI,CAAAA,SAAJ,CAAgBC,QAAS,CAAC/E,EAAD,CAAKC,WAAL,CAAkB,CACnC4E,EAAAA,CAAQ,IAAIpG,UAAJ,CAAeuB,EAAGrC,CAAAA,MAAlB,CAA0BsC,WAAYE,CAAAA,GAAtC,CAA2C,CAA3C,CAAZ,KACI6E,MAAQH,EAAA,CAAM,CAAN,CAARG,CAAmB,GAEvB/E,YAAYE,CAAAA,GAAZ,EAAmB,CAEnB,OAAO,CACH8E,EAAGJ,EAAA,CAAM,CAAN,CADA,CAEHK,EAAGL,EAAA,CAAM,CAAN,CAFA,CAGHM,EAAGN,EAAA,CAAM,CAAN,CAHA,CAIHO,EAAGJ,KAJA,CANgC,CAoB3C3I,IAAIgJ,CAAAA,UAAJ,CAAiBC,QAAS,CAACC,KAAD,CAAQ,CAI9B,MAFUzD,KAAIrD,UAAJqD,CAAe,CAACyD,KAAMN,CAAAA,CAAP,CAAUM,KAAML,CAAAA,CAAhB,CAAmBK,KAAMJ,CAAAA,CAAzB,CADb1F,IAAK+F,CAAAA,KAALR,CAAqB,GAArBA,CAAWO,KAAMH,CAAAA,CAAjBJ,CACa,CAAflD,CAFoB,CAUlCzF,IAAIoJ,CAAAA,QAAJ,CAAeC,QAAS,EAAG,CACvB,MAAO,CAAA,CADgB,CAO3BrJ,IAAIsJ,CAAAA,SAAJ,CAAgBC,QAAS,EAAG,CACxB,MAAO,CAAA,CADiB,CAO5BvJ,IAAIwJ,CAAAA,QAAJ,CAAeC,QAAS,EAAG,CACvB,MAAO,KADgB,CAO3BzJ;GAAI0J,CAAAA,WAAJ,CAAkBC,QAAS,EAAG,CAC1B,MAAO,EADmB,CAW9B3J,IAAI4J,CAAAA,WAAJ,CAAkBC,QAAS,CAAClG,EAAD,CAAKC,WAAL,CAAkB,CAAA,IACrCkG,SAAW9J,GAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,WAAtB,CAAmC,CAAnC,CAAsCC,WAAtC,CACXmG,GAAAA,CAAO/J,GAAI8F,CAAAA,aAAJ,CAAkBnC,EAAlB,CAAsB,WAAtB,CAAmC,CAAnC,CAAsCC,WAAtC,CACPoG,YAAAA,CAAuB,CAAd,GAACF,QAAD,EAA4B,CAA5B,GAAmBC,EAAnB,CAAiCE,IAAKC,CAAAA,GAAL,EAAjC,CAA8ClK,GAAImK,CAAAA,WAAJ,CAAgBL,QAAhB,CAA0BC,EAA1B,CAE3D,OAAO,CACHzF,IAAK,CAACwF,QAAD,CAAWC,EAAX,CADF,CAEHC,OAAQA,WAFL,CALkC,CAsB7ChK,IAAIoK,CAAAA,YAAJ,CAAmBC,QAAS,CAACC,OAAD,CAAU,CAC9BhG,OAAAA,CAAMgG,OAAQhG,CAAAA,GAAR,CAAcgG,OAAQhG,CAAAA,GAAtB,CAA4BtE,GAAIuK,CAAAA,WAAJ,CAAgBD,OAAQN,CAAAA,MAAxB,CADJ,KAE9BvE,IAAM,IAAIrD,UAAJ,CAAe,CAAf,CAFwB,CAG9BuB,GAAK,IAAIxB,QAAJ,CAAasD,GAAInE,CAAAA,MAAjB,CAETtB,IAAIwG,CAAAA,UAAJ,CAAelC,OAAA,CAAI,CAAJ,CAAf,CAAuBX,EAAvB,CAA2B,CAA3B,CACA3D,IAAIwG,CAAAA,UAAJ,CAAelC,OAAA,CAAI,CAAJ,CAAf;AAAuBX,EAAvB,CAA2B,CAA3B,CAEA,OAAO8B,IAR2B,CAmBtCzF,IAAIsK,CAAAA,OAAJ,CAAcE,QAAS,CAACC,IAAD,CAAOP,GAAP,CAAY,CAC/BO,IAAA,CAAOA,IAAP,EAAe,CACfP,IAAA,CAAMA,GAAN,EAAaD,IAAKC,CAAAA,GAAL,EAFkB,KAI3BQ,QAAUR,GAAVQ,CAAgB,GAChBC,IAAAA,CAAWvH,IAAKwH,CAAAA,KAAL,CAAWF,OAAX,CALgB,KAO3BG,UAAYzH,IAAKwH,CAAAA,KAAL,CAAWH,IAAX,CAEZK,KAAAA,CAHWJ,OAGXI,CAHqBH,GAGrBG,EADYL,IACZK,CADmBD,SACnBC,CAEQ,EAAZ,CAAIA,IAAJ,GACQC,OACaC,CADA5H,IAAKwH,CAAAA,KAAL,CAAWE,IAAX,CACAE,CAEjBH,SAFiBG,EAEJD,OAFIC,CAAAF,IAAAE,EAAQD,OAF7B,CAWA,OAAO,CACHzG,IAAK,CAJKqG,GAIL,CAJgBE,SAIhB,CAJ4B7K,GAAIC,CAAAA,UAIhC,CAHMmD,IAAK+F,CAAAA,KAAL8B,CAAWjL,GAAIE,CAAAA,MAAf+K,CAAwBH,IAAxBG,CAGN,CADF,CAtBwB,CAmCnCjL,IAAImK,CAAAA,WAAJ,CAAkBe,QAAS,CAACpB,QAAD,CAAWC,IAAX,CAAiB,CAKxC,MAFqC,IAErC,EAJeD,QAIf,CAJ0B9J,GAAIC,CAAAA,UAI9B,CAHe8J,IAGf,CAHsB/J,GAAIE,CAAAA,MAG1B,CALwC,CAQ5CF,IAAIuK,CAAAA,WAAJ,CAAkBY,QAAS,CAACC,MAAD,CAAS,CACrBA,MAAPX,EAAgB,GADY,KAE5BI,UAAYzH,IAAKwH,CAAAA,KAAL,CAAWH,MAAX,CAKhB;MAAO,CAHOI,SAGP,CAHmB7K,GAAIC,CAAAA,UAGvB,CAFQmD,IAAK+F,CAAAA,KAAL8B,CAAWjL,GAAIE,CAAAA,MAAf+K,EAFAR,MAEAQ,CAFOJ,SAEPI,EAER,CAPyB,CAkBpCjL,IAAIqL,CAAAA,aAAJ,CAAoBC,QAAS,CAAC3H,EAAD,CAAK4H,OAAL,CAAc3H,WAAd,CAA2B,CACpD,IAAI4H,cAAgBxL,GAAIyD,CAAAA,UAAJ,CAAeE,EAAf,CAAmBC,WAAnB,CACpB,IAAmC,CAAnC,GAAI4H,aAAcC,CAAAA,OAAd,CAAsB,GAAtB,CAAJ,CAKI,KAAUjJ,MAAJ,CAAU,mGAAV,CAEFgJ,aAFE,CAEa,cAFb,CAE8B5H,WAAYE,CAAAA,GAF1C,CAAN,CAPgD,IAYhD4H,SAAWF,aAAcG,CAAAA,SAAd,CAAwB,CAAxB,CAA2BC,CAAAA,KAA3B,CAAiC,EAAjC,CAZqC,CAahDC,KAAO,EAEX7L,IAAI8L,CAAAA,sBAAJ,CAA2BD,IAA3B,CAAiCH,QAAjC,CAA2CF,aAA3C,CAA0D7H,EAA1D,CAA8D4H,OAA9D,CAAuE3H,WAAvE,CAEA;MAAOiI,KAjB6C,CAqBxD7L,IAAI+L,CAAAA,YAAJ,CAAmBC,QAAS,CAACC,OAAD,CAAUT,aAAV,CAAyB7H,EAAzB,CAA6B4H,OAA7B,CAAsC3H,WAAtC,CAAmD,CAC3E,IAAIsI,SAAWlM,GAAImM,CAAAA,aAAJ,CAAkBF,OAAlB,CACf,IAAI,CAACC,QAAL,CACI,KAAU1J,MAAJ,CAAU,GAAV,CAAgByJ,OAAhB,CAA0B,sDAA1B,CAAmFT,aAAnF,CAAN,CAIAY,aAAAA,CAAMpM,GAAA,CADMkM,QAASG,CAAAA,MACf,CAAA,CAAe1I,EAAf,CAAmBC,WAAnB,CAEN2H,QAAQnL,CAAAA,QAAZ,GACIgM,aADJ,CACU,CACFE,KAAML,OADJ,CAEFM,MAAOH,aAFL,CADV,CAOA,OAAOA,cAhBoE,CAoB/EpM,IAAI8L,CAAAA,sBAAJ,CAA6BU,QAAS,CAAC/G,GAAD,CAAMiG,QAAN,CAAgBF,aAAhB,CAA+B7H,EAA/B,CAAmC4H,OAAnC,CAA4C3H,WAA5C,CAAyD,CAG3F,IAFA,IAAIN,EAAI,CAER,CAAOA,CAAP,CAAWoI,QAASxJ,CAAAA,MAApB,CAAA,CAA4B,CAAA,IACpB+J;AAAUP,QAAA,CAASpI,CAAT,CAGd,IAAgB,GAAhB,GAAI2I,OAAJ,CAAqB,CACbQ,IAAAA,IAAgBf,QAAS7G,CAAAA,KAAT,CAAevB,CAAf,CAAmB,CAAnB,CAChBoJ,QAAAA,CAAcD,GAAchB,CAAAA,OAAd,CAAsB,GAAtB,CAElB,IAAkB,CAAlB,CAAIiB,OAAJ,CACI,KAAUlK,MAAJ,CAAU,6HAAV,CAC4DgJ,aAD5D,CAAN,CAIAmB,GAAAA,CAAeF,GAAc5H,CAAAA,KAAd,CAAoB,CAApB,CAAuB6H,OAAvB,CACnBN,IAAA,CAAMpM,GAAI8L,CAAAA,sBAAJ,CAA2B,EAA3B,CAA+Ba,GAA/B,CAA6CnB,aAA7C,CAA4D7H,EAA5D,CAAgE4H,OAAhE,CAAyE3H,WAAzE,CACNN,EAAA,EAAKoJ,OAAL,CAAmB,CAXF,CAArB,IAaIN,IACA,CADMpM,GAAI+L,CAAAA,YAAJ,CAAiBE,OAAjB,CAA0BT,aAA1B,CAAyC7H,EAAzC,CAA6C4H,OAA7C,CAAsD3H,WAAtD,CACN,CAAAN,CAAA,EAGJmC,IAAIvB,CAAAA,IAAJ,CAASkI,GAAT,CArBwB,CAwB5B,MAAO3G,IA3BoF,CAqC/FzF,IAAI4M,CAAAA,cAAJ,CAAqBC,QAAS,CAAChB,IAAD,CAAON,OAAP,CAAgB,CACtCuB,IAAAA;AAAgB9M,GAAI+M,CAAAA,gBAAJ,CAAqBlB,IAArB,CAA2BN,OAA3B,CACpB,OAAOvL,IAAIgN,CAAAA,SAAJ,CAAcF,IAAd,CAFmC,CAM9C9M,IAAIgN,CAAAA,SAAJ,CAAgBC,QAAS,CAACC,cAAD,CAAiB,CAAA,IAClC3K,IAAM,IAAIH,UAAJ,CAAe8K,cAAenJ,CAAAA,UAA9B,CACNoJ,eAAAA,CAAQD,cAAeC,CAAAA,KAG3B,KAJA,IAEIlL,OAAS,CAFb,CAISqB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6J,cAAMjL,CAAAA,MAA1B,CAAkCoB,CAAA,EAAlC,CAAuC,CACnC,IAAI8J,KAAOD,cAAA,CAAM7J,CAAN,CACXtD,IAAI8C,CAAAA,aAAJ,CAAkBsK,IAAlB,CAAwB7K,GAAxB,CAA6BN,MAA7B,CACAA,OAAA,EAAUmL,IAAKlL,CAAAA,MAHoB,CAMvC,MAAOK,IAX+B,CAe1CvC,IAAIqN,CAAAA,WAAJ,CAAkBC,QAAS,CAACC,QAAD,CAAWL,cAAX,CAA2B,CAClDA,cAAeC,CAAAA,KAAMjJ,CAAAA,IAArB,CAA0BqJ,QAA1B,CACAL,eAAenJ,CAAAA,UAAf,EAA6BwJ,QAASrL,CAAAA,MAFY,CAKtDlC,IAAIwN,CAAAA,mBAAJ,CAA0BC,QAAS,CAAC5B,IAAD,CAAOqB,cAAP,CAAuB,CAGtD,IAFA,IAAIQ;AAAU,GAAd,CAESpK,EAAI,CAAb,CAAgBA,CAAhB,CAAoBuI,IAAK3J,CAAAA,MAAzB,CAAiCoB,CAAA,EAAjC,CAEIoK,OAAA,EAAW1N,GAAI2N,CAAAA,aAAJ,CADD9B,IAAAO,CAAK9I,CAAL8I,CACC,CAAuBc,cAAvB,CAKf,OAFAQ,QAEA,CAFW,GAR2C,CAa1D1N,IAAI2N,CAAAA,aAAJ,CAAoBC,QAAS,CAACxB,GAAD,CAAMc,cAAN,CAAsB,CAC/C,GAAIlN,GAAIa,CAAAA,OAAJ,CAAYuL,GAAZ,CAAJ,CACI,MAAOpM,IAAIwN,CAAAA,mBAAJ,CAAwBpB,GAAxB,CAA6Bc,cAA7B,CAGX,KACIW,OAAS7N,GAAImM,CAAAA,aAAJ,CADFC,GAAIE,CAAAA,IACF,CAAwBuB,CAAAA,MAEjCA,OAAJ,GACQ9I,MACJ,CADW/E,GAAA,CAAI6N,MAAJ,CAAA,CAAYzB,GAAIG,CAAAA,KAAhB,CACX,CAAAvM,GAAIqN,CAAAA,WAAJ,CAAgBtI,MAAhB,CAAsBmI,cAAtB,CAFJ,CAKA,OAAOd,IAAIE,CAAAA,IAboC,CAiBnDtM,IAAI+M,CAAAA,gBAAJ,CAAuBe,QAAS,CAACjC,IAAD,CAAON,OAAP,CAAgB2B,cAAhB,CAAgC,CACvDlN,GAAIa,CAAAA,OAAJ,CAAYgL,IAAZ,CAAL,GACIA,IADJ,CAC2B,WAAhB,GAAA,MAAOA,KAAP,CAA8B,EAA9B,CAAmC,CAACA,IAAD,CAD9C,CAIAqB,eAAA,CAAiBA,cAAjB;AAAmC,CAC/BnJ,WAAY,CADmB,CAE/BoJ,MAAO,EAFwB,CAK9B5B,QAAQnL,CAAAA,QAAb,GACIyL,IADJ,CACW7L,GAAI+N,CAAAA,iBAAJ,CAAsBlC,IAAtB,CADX,CAV4D,KAcxDL,cAAgB,GAChBwC,QAAAA,CAAcd,cAAeC,CAAAA,KAAMjL,CAAAA,MAEvC,KAAK,IAAIoB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBuI,IAAK3J,CAAAA,MAAzB,CAAiCoB,CAAA,EAAjC,CAEIkI,aAAA,EAAiBxL,GAAI2N,CAAAA,aAAJ,CADP9B,IAAAO,CAAK9I,CAAL8I,CACO,CAAuBc,cAAvB,CAGjBe,KAAAA,CAAWjO,GAAImF,CAAAA,WAAJ,CAAgBqG,aAAhB,CACf0B,eAAenJ,CAAAA,UAAf,EAA6BkK,IAASlK,CAAAA,UACtCmJ,eAAeC,CAAAA,KAAMe,CAAAA,MAArB,CAA4BF,OAA5B,CAAyC,CAAzC,CAA4CC,IAA5C,CAEA,OAAOf,eA1BqD,CAqChElN,IAAImO,CAAAA,WAAJ,CAAkBC,QAAS,CAACrJ,IAAD,CAAOwG,OAAP,CAAgB3H,WAAhB,CAA6B,CACpD2H,OAAA,CAAUA,OAAV,EAAqBvL,GAAIG,CAAAA,QAErBwD,KAAAA,CAAK3D,GAAI+B,CAAAA,QAAJ,CAAagD,IAAb,CAAmBA,IAAKsJ,CAAAA,UAAxB,CAAoCtJ,IAAKhB,CAAAA,UAAzC,CACTH;WAAA,CAAcA,WAAd,EAA6B,CACzBE,IAAK,CADoB,CAI7B,KAAIwK,QAAUtO,GAAIyD,CAAAA,UAAJ,CAAeE,IAAf,CAAmBC,WAAnB,CACd,OAAO5D,IAAIuO,CAAAA,mBAAJ,CAAwBD,OAAxB,CAAiC3K,IAAjC,CAAqC4H,OAArC,CAA8C3H,WAA9C,CAT6C,CAaxD5D,IAAIuO,CAAAA,mBAAJ,CAA0BC,QAAS,CAACF,OAAD,CAAU3K,EAAV,CAAc4H,OAAd,CAAuB3H,WAAvB,CAAoC,CACnE,GAA6B,CAA7B,GAAI0K,OAAQ7C,CAAAA,OAAR,CAAgB,GAAhB,CAAJ,CACI,KAAUjJ,MAAJ,CAAU,8EAAV,CAC+B8L,OAD/B,CAAN,CAIAzC,EAAAA,CAAO7L,GAAIqL,CAAAA,aAAJ,CAAkB1H,EAAlB,CAAsB4H,OAAtB,CAA+B3H,WAA/B,CAEX,OAAO,CACM0K,OADN,CAEHzC,KAAsB,CAAhB,GAAAA,EAAK3J,CAAAA,MAAL,EAAqBqJ,OAAQlL,CAAAA,gBAA7B,CAAgDwL,EAAA,CAAK,CAAL,CAAhD,CAA0DA,EAF7D,CAR4D,CAevE7L,IAAIyO,CAAAA,mBAAJ,CAA0BC,QAAS,CAACC,GAAD,CAAMpD,OAAN,CAAe2B,cAAf,CAA+B,CAC9DA,cAAA;AAAiBA,cAAjB,EAAmC,CAC/BnJ,WAAY,CADmB,CAE/BoJ,MAAO,EAFwB,CAKnCnN,IAAIqN,CAAAA,WAAJ,CAAgBrN,GAAImF,CAAAA,WAAJ,CAAgBwJ,GAAIL,CAAAA,OAApB,CAAhB,CAA8CpB,cAA9C,CACA,OAAOlN,IAAI+M,CAAAA,gBAAJ,CAAqB4B,GAAI9C,CAAAA,IAAzB,CAA+BN,OAA/B,CAAwC2B,cAAxC,CAPuD,CAiBlElN,IAAI4O,CAAAA,YAAJ,CAAmBC,QAAS,CAACF,GAAD,CAAMpD,OAAN,CAAe,CACvCA,OAAA,CAAUA,OAAV,EAAqBvL,GAAIG,CAAAA,QAEzB,IAAI,CAACH,GAAI8O,CAAAA,cAAJ,CAAmBH,GAAnB,CAAL,CACI,KAAUnM,MAAJ,CAAU,4DAAV,CACFC,IAAKC,CAAAA,SAAL,CAAeiM,GAAf,CAAoB,IAApB,CAA0B,CAA1B,CADE,CAAN,CAIAI,GAAAA,CAAgB/O,GAAIyO,CAAAA,mBAAJ,CAAwBE,GAAxB,CAA6BpD,OAA7B,CACpB,OAAOvL,IAAIgN,CAAAA,SAAJ,CAAc+B,GAAd,CATgC,CAY3C/O,IAAI8O,CAAAA,cAAJ,CAAqBE,QAAS,CAACL,GAAD,CAAM,CAChC,MAAOA,IAAIL,CAAAA,OAAX,EAAmD,CAAnD,GAAsBK,GAAIL,CAAAA,OAAQ7C,CAAAA,OAAZ,CAAoB,GAApB,CADU,CAYpCzL;GAAIiP,CAAAA,UAAJ,CAAiBC,QAAS,CAACvL,EAAD,CAAK4H,OAAL,CAAc3H,WAAd,CAA2B,CACjD,MAAO5D,IAAImP,CAAAA,UAAJ,CAAexL,EAAf,CAAmB4H,OAAnB,CAA4B3H,WAA5B,CAD0C,CAKrD5D,IAAIoP,CAAAA,oBAAJ,CAA2BC,QAAS,CAACC,MAAD,CAAS/D,OAAT,CAAkB2B,cAAlB,CAAkC,CAClEA,cAAA,CAAiBA,cAAjB,EAAmC,CAC/BnJ,WAAY,CADmB,CAE/BoJ,MAAO,EAFwB,CAKnCnN,IAAIqN,CAAAA,WAAJ,CAAgBrN,GAAImF,CAAAA,WAAJ,CAAgB,SAAhB,CAAhB,CAA4C+H,cAA5C,CACAlN,IAAIqN,CAAAA,WAAJ,CAAgBrN,GAAIoK,CAAAA,YAAJ,CAAiBkF,MAAOhF,CAAAA,OAAxB,CAAhB,CAAkD4C,cAAlD,CAEA,KAAK,IAAI5J,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgM,MAAOC,CAAAA,OAAQrN,CAAAA,MAAnC,CAA2CoB,CAAA,EAA3C,CAAgD,CAAA,IACxCkM,OAASF,MAAOC,CAAAA,OAAP,CAAejM,CAAf,CAETmM,OAAAA,CAAmB,CADPD,MAAOlB,CAAAA,OAAPoB,CAAiB1P,GAAIyO,CAAAA,mBAArBiB,CAA2C1P,GAAIoP,CAAAA,oBACxC,EAAUI,MAAV,CAAkBjE,OAAlB,CAEvB2B,eAAenJ,CAAAA,UAAf;AAA6B0L,MAAiB1L,CAAAA,UAC9C/D,IAAIqN,CAAAA,WAAJ,CAAgBrN,GAAIwG,CAAAA,UAAJ,CAAeiJ,MAAiB1L,CAAAA,UAAhC,CAAhB,CAA6DmJ,cAA7D,CACAA,eAAeC,CAAAA,KAAf,CAAuBD,cAAeC,CAAAA,KAAMwC,CAAAA,MAArB,CAA4BF,MAAiBtC,CAAAA,KAA7C,CAPqB,CAUhD,MAAOD,eAnB2D,CA6BtElN,IAAI4P,CAAAA,WAAJ,CAAkBC,QAAS,CAACP,MAAD,CAAS/D,OAAT,CAAkB,CACzC,GAAI,CAACvL,GAAI8P,CAAAA,aAAJ,CAAkBR,MAAlB,CAAL,CACI,KAAU9M,MAAJ,CAAU,6EAAV,CACeC,IAAKC,CAAAA,SAAL,CAAe4M,MAAf,CAAuB,IAAvB,CAA6B,CAA7B,CADf,CAAN,CAIJ/D,OAAA,CAAUA,OAAV,EAAqBvL,GAAIG,CAAAA,QACrB4P,OAAAA,CAAmB/P,GAAIoP,CAAAA,oBAAJ,CAAyBE,MAAzB,CAAiC/D,OAAjC,CAEvB,OAAOvL,IAAIgN,CAAAA,SAAJ,CAAc+C,MAAd,CATkC,CAY7C/P,IAAI8P,CAAAA,aAAJ,CAAoBE,QAAS,CAACV,MAAD,CAAS,CAClC,MAA0B3N,KAAAA,EAA1B;AAAO2N,MAAOhF,CAAAA,OAAd,EAA0D3I,IAAAA,EAA1D,GAAuC2N,MAAOC,CAAAA,OADZ,CAKtCvP,IAAIiQ,CAAAA,kBAAJ,CAAyBC,QAAS,CAACvM,EAAD,CAAK4H,OAAL,CAAc3H,WAAd,CAA2BT,GAA3B,CAAgC,CAI9D,IAJ8D,IAC1DmH,QAAUtK,GAAI4J,CAAAA,WAAJ,CAAgBjG,EAAhB,CAAoBC,WAApB,CADgD,CAE1D2L,QAAU,EAEd,CAAO3L,WAAYE,CAAAA,GAAnB,CAAyBX,GAAzB,CAAA,CAA8B,CAAA,IACtBgN,WAAanQ,GAAIsG,CAAAA,SAAJ,CAAc3C,EAAd,CAAkBC,WAAlB,CAEb4L,WAAAA,CAASxP,GAAImP,CAAAA,UAAJ,CAAexL,EAAf,CAAmB4H,OAAnB,CAA4B3H,WAA5B,CADGA,WAAYE,CAAAA,GACf,CADqBqM,UACrB,CAEbZ,QAAQrL,CAAAA,IAAR,CAAasL,UAAb,CAL0B,CAQ9B,MAAO,CACMlF,OADN,CAEMiF,OAFN,CAZuD,CAyBlEvP,IAAImP,CAAAA,UAAJ,CAAiBiB,QAAS,CAACrL,IAAD,CAAOwG,OAAP,CAAgB3H,WAAhB,CAA6BT,GAA7B,CAAkC,CACpDQ,IAAAA,CAAK3D,GAAI+B,CAAAA,QAAJ,CAAagD,IAAb,CAAmBA,IAAKsJ,CAAAA,UAAxB,CAAoCtJ,IAAKhB,CAAAA,UAAzC,CAETZ,IAAA,CAAcxB,IAAAA,EAAR,GAAAwB,GAAA,CAAoBQ,IAAGI,CAAAA,UAAvB,CAAoCZ,GAC1CS;WAAA,CAAcA,WAAd,EAA6B,CACzBE,IAAK,CADoB,CAJ2B,KAQpDuM,OAASrQ,GAAIyD,CAAAA,UAAJ,CAAeE,IAAf,CAAmBC,WAAnB,CAR2C,CASpD0M,UAAYD,MAAA,CAAO,CAAP,CAEhB,IAAkB,GAAlB,GAAIC,SAAJ,CACI,MAAOtQ,IAAIiQ,CAAAA,kBAAJ,CAAuBtM,IAAvB,CAA2B4H,OAA3B,CAAoC3H,WAApC,CAAiDT,GAAjD,CACJ,IAAkB,GAAlB,GAAImN,SAAJ,CACH,MAAOtQ,IAAIuO,CAAAA,mBAAJ,CAAwB8B,MAAxB,CAAgC1M,IAAhC,CAAoC4H,OAApC,CAA6C3H,WAA7C,CAGX,MAAUpB,MAAJ,CAAU,6FAAV,CACgB6N,MADhB,CAAN,CAjBwD,CA4B5DrQ,IAAIuQ,CAAAA,WAAJ,CAAkBC,QAAS,CAAChB,MAAD,CAASjE,OAAT,CAAkB,CACzC,GAAIvL,GAAI8O,CAAAA,cAAJ,CAAmBU,MAAnB,CAAJ,CACI,MAAOxP,IAAI4O,CAAAA,YAAJ,CAAiBY,MAAjB,CAAyBjE,OAAzB,CACJ,IAAIvL,GAAI8P,CAAAA,aAAJ,CAAkBN,MAAlB,CAAJ,CACH,MAAOxP,IAAI4P,CAAAA,WAAJ,CAAgBJ,MAAhB;AAAwBjE,OAAxB,CAEP,MAAU/I,MAAJ,CAAU,wFAAV,CACgBC,IAAKC,CAAAA,SAAL,CAAe8M,MAAf,CAAuB,IAAvB,CAA6B,CAA7B,CADhB,CAAN,CANqC,CAY7CxP,IAAImM,CAAAA,aAAJ,CAAoB,CAChB7I,EAAG,CACC+I,OAAQ,WADT,CAECwB,OAAQ,YAFT,CADa,CAKhB4C,EAAG,CACCpE,OAAQ,WADT,CAECwB,OAAQ,YAFT,CALa,CAShB6C,EAAG,CACCrE,OAAQ,aADT,CAECwB,OAAQ,cAFT,CATa,CAahB8C,EAAG,CACCtE,OAAQ,YADT,CAECwB,OAAQ,aAFT,CAba,CAiBhB+C,EAAG,CACCvE,OAAQ,YADT,CAECwB,OAAQ,aAFT,CAjBa,CAqBhB/E,EAAG,CACCuD,OAAQ,UADT,CAECwB,OAAQ,WAFT,CArBa,CAyBhBgD,EAAG,CACCxE,OAAQ,aADT,CAECwB,OAAQ,cAFT,CAzBa,CA6BhBiD,EAAG,CACCzE,OAAQ,UADT,CA7Ba,CAgChB0E,EAAG,CACC1E,OAAQ,WADT,CAhCa;AAmChB2E,EAAG,CACC3E,OAAQ,UADT,CAnCa,CAsChB4E,EAAG,CACC5E,OAAQ,aADT,CAtCa,CAyChB6E,EAAG,CACC7E,OAAQ,aADT,CAECwB,OAAQ,cAFT,CAzCa,CA6ChBsD,EAAG,CACC9E,OAAQ,YADT,CAECwB,OAAQ,aAFT,CA7Ca,CAiDhBjF,EAAG,CACCyD,OAAQ,WADT,CAECwB,OAAQ,YAFT,CAjDa,CAqDhBuD,EAAG,CACC/E,OAAQ,eADT,CAECwB,OAAQ,gBAFT,CArDa,CA6DpB7N,IAAIqR,CAAAA,oBAAJ,CAA2BC,QAAS,CAAClF,GAAD,CAAM,CAItC,OAHWE,MAAOF,IAGlB,EACI,KAAK,SAAL,CACI,MAAOA,IAAA,CAAM,GAAN,CAAY,GACvB,MAAK,QAAL,CACI,MAAO,GACX,MAAK,QAAL,CACI,MAAO,GACX,MAAK,WAAL,CACI,MAAO,GACX,MAAK,QAAL,CACI,GAAY,IAAZ,GAAIA,GAAJ,CACI,MAAO,GACJ,IAAIA,GAAJ,WAAmBhK,WAAnB,EACHgK,GADG,WACY7K,YADZ,CAEH,MAAO,GACJ;GAAwB,QAAxB,GAAI,MAAO6K,IAAIxF,CAAAA,IAAf,EAAuD,QAAvD,GAAoC,MAAOwF,IAAIvF,CAAAA,GAA/C,CACH,MAAO,GAhBnB,CAqBA,KAAUrE,MAAJ,CAAU,2CAAV,CACFC,IAAKC,CAAAA,SAAL,CAAe0J,GAAf,CAAoB,IAApB,CAA0B,CAA1B,CADE,CAAN,CAzBsC,CA8B1CpM,IAAI+N,CAAAA,iBAAJ,CAAwBwD,QAAS,CAAC1F,IAAD,CAAO,CAGpC,IAFA,IAAI2F,UAAY,EAAhB,CAESlO,EAAI,CAAb,CAAgBA,CAAhB,CAAoBuI,IAAK3J,CAAAA,MAAzB,CAAiCoB,CAAA,EAAjC,CAAsC,CAAA,IAC9B8I,IAAMP,IAAA,CAAKvI,CAAL,CAKNmO,IAAA,CAFiB,QAArB,GAAI,MAAQrF,IAAZ,EAAiCA,GAAIE,CAAAA,IAArC,EAA2D3K,IAAAA,EAA3D,GAA6CyK,GAAIG,CAAAA,KAAjD,CAEaH,GAFb,CAGWpM,GAAIa,CAAAA,OAAJ,CAAYuL,GAAZ,CAAJ,CAGMpM,GAAI+N,CAAAA,iBAAJ,CAAsB3B,GAAtB,CAHN,CAMM,CACLE,KAFUtM,GAAIqR,CAAAA,oBAAJK,CAAyBtF,GAAzBsF,CACL,CAELnF,MAAOH,GAFF,CAMboF,UAAUtN,CAAAA,IAAV,CAAeuN,GAAf,CAnBkC,CAsBtC,MAAOD,UAzB6B,CA4BpCxR,IAAIM,CAAAA,UAAR,GACIV,MAAOC,CAAAA,OADX,CACqBG,GADrB,CA9kCS,CAAZ,CAAA,EAd2F;",
"sources":["node_modules/osc/src/osc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$osc$src$osc\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\n/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Copyright 2014-2016, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/* global require, module, process, Buffer, Long, util */\n\nvar osc = osc || {};\n\n(function () {\n\n    \"use strict\";\n\n    osc.SECS_70YRS = 2208988800;\n    osc.TWO_32 = 4294967296;\n\n    osc.defaults = {\n        metadata: false,\n        unpackSingleArgs: true\n    };\n\n    // Unsupported, non-API property.\n    osc.isCommonJS = typeof module !== \"undefined\" && module.exports ? true : false;\n\n    // Unsupported, non-API property.\n    osc.isNode = osc.isCommonJS && typeof window === \"undefined\";\n\n    // Unsupported, non-API property.\n    osc.isElectron = typeof process !== \"undefined\" &&\n        process.versions && process.versions.electron ? true : false;\n\n    // Unsupported, non-API property.\n    osc.isBufferEnv = osc.isNode || osc.isElectron;\n\n    // Unsupported, non-API function.\n    osc.isArray = function (obj) {\n        return obj && Object.prototype.toString.call(obj) === \"[object Array]\";\n    };\n\n    // Unsupported, non-API function.\n    osc.isTypedArrayView = function (obj) {\n        return obj.buffer && obj.buffer instanceof ArrayBuffer;\n    };\n\n    // Unsupported, non-API function.\n    osc.isBuffer = function (obj) {\n        return osc.isBufferEnv && obj instanceof Buffer;\n    };\n\n    // Unsupported, non-API member.\n    osc.Long = typeof Long !== \"undefined\" ? Long :\n        osc.isNode ? require(\"long\") : undefined;\n\n    // Unsupported, non-API member. Can be removed when supported versions\n    // of Node.js expose TextDecoder as a global, as in the browser.\n    osc.TextDecoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-8\") :\n        typeof util !== \"undefined\" && typeof (util.TextDecoder !== \"undefined\") ? new util.TextDecoder(\"utf-8\") : undefined;\n\n    osc.TextEncoder = typeof TextEncoder !== \"undefined\" ? new TextEncoder(\"utf-8\") :\n        typeof util !== \"undefined\" && typeof (util.TextEncoder !== \"undefined\") ? new util.TextEncoder(\"utf-8\") : undefined;\n\n    /**\n     * Wraps the specified object in a DataView.\n     *\n     * @param {Array-like} obj the object to wrap in a DataView instance\n     * @return {DataView} the DataView object\n     */\n    // Unsupported, non-API function.\n    osc.dataView = function (obj, offset, length) {\n        if (obj.buffer) {\n            return new DataView(obj.buffer, offset, length);\n        }\n\n        if (obj instanceof ArrayBuffer) {\n            return new DataView(obj, offset, length);\n        }\n\n        return new DataView(new Uint8Array(obj), offset, length);\n    };\n\n    /**\n     * Takes an ArrayBuffer, TypedArray, DataView, Buffer, or array-like object\n     * and returns a Uint8Array view of it.\n     *\n     * Throws an error if the object isn't suitably array-like.\n     *\n     * @param {Array-like or Array-wrapping} obj an array-like or array-wrapping object\n     * @returns {Uint8Array} a typed array of octets\n     */\n    // Unsupported, non-API function.\n    osc.byteArray = function (obj) {\n        if (obj instanceof Uint8Array) {\n            return obj;\n        }\n\n        var buf = obj.buffer ? obj.buffer : obj;\n\n        if (!(buf instanceof ArrayBuffer) && (typeof buf.length === \"undefined\" || typeof buf === \"string\")) {\n            throw new Error(\"Can't wrap a non-array-like object as Uint8Array. Object was: \" +\n                JSON.stringify(obj, null, 2));\n        }\n\n\n        // TODO gh-39: This is a potentially unsafe algorithm;\n        // if we're getting anything other than a TypedArrayView (such as a DataView),\n        // we really need to determine the range of the view it is viewing.\n        return new Uint8Array(buf);\n    };\n\n    /**\n     * Takes an ArrayBuffer, TypedArray, DataView, or array-like object\n     * and returns a native buffer object\n     * (i.e. in Node.js, a Buffer object and in the browser, a Uint8Array).\n     *\n     * Throws an error if the object isn't suitably array-like.\n     *\n     * @param {Array-like or Array-wrapping} obj an array-like or array-wrapping object\n     * @returns {Buffer|Uint8Array} a buffer object\n     */\n    // Unsupported, non-API function.\n    osc.nativeBuffer = function (obj) {\n        if (osc.isBufferEnv) {\n            return osc.isBuffer(obj) ? obj :\n                Buffer.from(obj.buffer ? obj : new Uint8Array(obj));\n        }\n\n        return osc.isTypedArrayView(obj) ? obj : new Uint8Array(obj);\n    };\n\n    // Unsupported, non-API function\n    osc.copyByteArray = function (source, target, offset) {\n        if (osc.isTypedArrayView(source) && osc.isTypedArrayView(target)) {\n            target.set(source, offset);\n        } else {\n            var start = offset === undefined ? 0 : offset,\n                len = Math.min(target.length - offset, source.length);\n\n            for (var i = 0, j = start; i < len; i++, j++) {\n                target[j] = source[i];\n            }\n        }\n\n        return target;\n    };\n\n    /**\n     * Reads an OSC-formatted string.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes of the OSC string\n     * @param {Object} offsetState an offsetState object used to store the current offset index\n     * @return {String} the JavaScript String that was read\n     */\n    osc.readString = function (dv, offsetState) {\n        var charCodes = [],\n            idx = offsetState.idx;\n\n        for (; idx < dv.byteLength; idx++) {\n            var charCode = dv.getUint8(idx);\n            if (charCode !== 0) {\n                charCodes.push(charCode);\n            } else {\n                idx++;\n                break;\n            }\n        }\n\n        // Round to the nearest 4-byte block.\n        idx = (idx + 3) & ~0x03;\n        offsetState.idx = idx;\n\n        var decoder = osc.isBufferEnv ? osc.readString.withBuffer :\n            osc.TextDecoder ? osc.readString.withTextDecoder : osc.readString.raw;\n\n        return decoder(charCodes);\n    };\n\n    osc.readString.raw = function (charCodes) {\n        // If no Buffer or TextDecoder, resort to fromCharCode\n        // This does not properly decode multi-byte Unicode characters.\n        var str = \"\";\n        var sliceSize = 10000;\n\n        // Processing the array in chunks so as not to exceed argument\n        // limit, see https://bugs.webkit.org/show_bug.cgi?id=80797\n        for (var i = 0; i < charCodes.length; i += sliceSize) {\n            str += String.fromCharCode.apply(null, charCodes.slice(i, i + sliceSize));\n        }\n\n        return str;\n    };\n\n    osc.readString.withTextDecoder = function (charCodes) {\n        var data = new Int8Array(charCodes);\n        return osc.TextDecoder.decode(data);\n    };\n\n    osc.readString.withBuffer = function (charCodes) {\n        return Buffer.from(charCodes).toString(\"utf-8\");\n    };\n\n    /**\n     * Writes a JavaScript string as an OSC-formatted string.\n     *\n     * @param {String} str the string to write\n     * @return {Uint8Array} a buffer containing the OSC-formatted string\n     */\n    osc.writeString = function (str) {\n\n        var encoder = osc.isBufferEnv ? osc.writeString.withBuffer :\n            osc.TextEncoder ? osc.writeString.withTextEncoder : null,\n            terminated = str + \"\\u0000\",\n            encodedStr;\n\n        if (encoder) {\n            encodedStr = encoder(terminated);\n        }\n\n        var len = encoder ? encodedStr.length : terminated.length,\n            paddedLen = (len + 3) & ~0x03,\n            arr = new Uint8Array(paddedLen);\n\n        for (var i = 0; i < len - 1; i++) {\n            var charCode = encoder ? encodedStr[i] : terminated.charCodeAt(i);\n            arr[i] = charCode;\n        }\n\n        return arr;\n    };\n\n    osc.writeString.withTextEncoder = function (str) {\n        return osc.TextEncoder.encode(str);\n    };\n\n    osc.writeString.withBuffer = function (str) {\n        return Buffer.from(str);\n    };\n\n    // Unsupported, non-API function.\n    osc.readPrimitive = function (dv, readerName, numBytes, offsetState) {\n        var val = dv[readerName](offsetState.idx, false);\n        offsetState.idx += numBytes;\n\n        return val;\n    };\n\n    // Unsupported, non-API function.\n    osc.writePrimitive = function (val, dv, writerName, numBytes, offset) {\n        offset = offset === undefined ? 0 : offset;\n\n        var arr;\n        if (!dv) {\n            arr = new Uint8Array(numBytes);\n            dv = new DataView(arr.buffer);\n        } else {\n            arr = new Uint8Array(dv.buffer);\n        }\n\n        dv[writerName](offset, val, false);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC int32 (\"i\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readInt32 = function (dv, offsetState) {\n        return osc.readPrimitive(dv, \"getInt32\", 4, offsetState);\n    };\n\n    /**\n     * Writes an OSC int32 (\"i\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeInt32 = function (val, dv, offset) {\n        return osc.writePrimitive(val, dv, \"setInt32\", 4, offset);\n    };\n\n    /**\n     * Reads an OSC int64 (\"h\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readInt64 = function (dv, offsetState) {\n        var high = osc.readPrimitive(dv, \"getInt32\", 4, offsetState),\n            low = osc.readPrimitive(dv, \"getInt32\", 4, offsetState);\n\n        if (osc.Long) {\n            return new osc.Long(low, high);\n        } else {\n            return {\n                high: high,\n                low: low,\n                unsigned: false\n            };\n        }\n    };\n\n    /**\n     * Writes an OSC int64 (\"h\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeInt64 = function (val, dv, offset) {\n        var arr = new Uint8Array(8);\n        arr.set(osc.writePrimitive(val.high, dv, \"setInt32\", 4, offset), 0);\n        arr.set(osc.writePrimitive(val.low,  dv, \"setInt32\", 4, offset + 4), 4);\n        return arr;\n    };\n\n    /**\n     * Reads an OSC float32 (\"f\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readFloat32 = function (dv, offsetState) {\n        return osc.readPrimitive(dv, \"getFloat32\", 4, offsetState);\n    };\n\n    /**\n     * Writes an OSC float32 (\"f\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeFloat32 = function (val, dv, offset) {\n        return osc.writePrimitive(val, dv, \"setFloat32\", 4, offset);\n    };\n\n    /**\n     * Reads an OSC float64 (\"d\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readFloat64 = function (dv, offsetState) {\n        return osc.readPrimitive(dv, \"getFloat64\", 8, offsetState);\n    };\n\n    /**\n     * Writes an OSC float64 (\"d\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeFloat64 = function (val, dv, offset) {\n        return osc.writePrimitive(val, dv, \"setFloat64\", 8, offset);\n    };\n\n    /**\n     * Reads an OSC 32-bit ASCII character (\"c\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {String} a string containing the read character\n     */\n    osc.readChar32 = function (dv, offsetState) {\n        var charCode = osc.readPrimitive(dv, \"getUint32\", 4, offsetState);\n        return String.fromCharCode(charCode);\n    };\n\n    /**\n     * Writes an OSC 32-bit ASCII character (\"c\") value.\n     *\n     * @param {String} str the string from which the first character will be written\n     * @param {DataView} [dv] a DataView instance to write the character into\n     * @param {Number} [offset] an offset into dv\n     * @return {String} a string containing the read character\n     */\n    osc.writeChar32 = function (str, dv, offset) {\n        var charCode = str.charCodeAt(0);\n        if (charCode === undefined || charCode < -1) {\n            return undefined;\n        }\n\n        return osc.writePrimitive(charCode, dv, \"setUint32\", 4, offset);\n    };\n\n    /**\n     * Reads an OSC blob (\"b\") (i.e. a Uint8Array).\n     *\n     * @param {DataView} dv a DataView instance to read from\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Uint8Array} the data that was read\n     */\n    osc.readBlob = function (dv, offsetState) {\n        var len = osc.readInt32(dv, offsetState),\n            paddedLen = (len + 3) & ~0x03,\n            blob = new Uint8Array(dv.buffer, offsetState.idx, len);\n\n        offsetState.idx += paddedLen;\n\n        return blob;\n    };\n\n    /**\n     * Writes a raw collection of bytes to a new ArrayBuffer.\n     *\n     * @param {Array-like} data a collection of octets\n     * @return {ArrayBuffer} a buffer containing the OSC-formatted blob\n     */\n    osc.writeBlob = function (data) {\n        data = osc.byteArray(data);\n\n        var len = data.byteLength,\n            paddedLen = (len + 3) & ~0x03,\n            offset = 4, // Extra 4 bytes is for the size.\n            blobLen = paddedLen + offset,\n            arr = new Uint8Array(blobLen),\n            dv = new DataView(arr.buffer);\n\n        // Write the size.\n        osc.writeInt32(len, dv);\n\n        // Since we're writing to a real ArrayBuffer,\n        // we don't need to pad the remaining bytes.\n        arr.set(data, offset);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC 4-byte MIDI message.\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Uint8Array} an array containing (in order) the port ID, status, data1 and data1 bytes\n     */\n    osc.readMIDIBytes = function (dv, offsetState) {\n        var midi = new Uint8Array(dv.buffer, offsetState.idx, 4);\n        offsetState.idx += 4;\n\n        return midi;\n    };\n\n    /**\n     * Writes an OSC 4-byte MIDI message.\n     *\n     * @param {Array-like} bytes a 4-element array consisting of the port ID, status, data1 and data1 bytes\n     * @return {Uint8Array} the written message\n     */\n    osc.writeMIDIBytes = function (bytes) {\n        bytes = osc.byteArray(bytes);\n\n        var arr = new Uint8Array(4);\n        arr.set(bytes);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC RGBA colour value.\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Object} a colour object containing r, g, b, and a properties\n     */\n    osc.readColor = function (dv, offsetState) {\n        var bytes = new Uint8Array(dv.buffer, offsetState.idx, 4),\n            alpha = bytes[3] / 255;\n\n        offsetState.idx += 4;\n\n        return {\n            r: bytes[0],\n            g: bytes[1],\n            b: bytes[2],\n            a: alpha\n        };\n    };\n\n    /**\n     * Writes an OSC RGBA colour value.\n     *\n     * @param {Object} color a colour object containing r, g, b, and a properties\n     * @return {Uint8Array} a byte array containing the written color\n     */\n    osc.writeColor = function (color) {\n        var alpha = Math.round(color.a * 255),\n            arr = new Uint8Array([color.r, color.g, color.b, alpha]);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC true (\"T\") value by directly returning the JavaScript Boolean \"true\".\n     */\n    osc.readTrue = function () {\n        return true;\n    };\n\n    /**\n     * Reads an OSC false (\"F\") value by directly returning the JavaScript Boolean \"false\".\n     */\n    osc.readFalse = function () {\n        return false;\n    };\n\n    /**\n     * Reads an OSC nil (\"N\") value by directly returning the JavaScript \"null\" value.\n     */\n    osc.readNull = function () {\n        return null;\n    };\n\n    /**\n     * Reads an OSC impulse/bang/infinitum (\"I\") value by directly returning 1.0.\n     */\n    osc.readImpulse = function () {\n        return 1.0;\n    };\n\n    /**\n     * Reads an OSC time tag (\"t\").\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} offsetState an offset state object containing the current index into dv\n     * @param {Object} a time tag object containing both the raw NTP as well as the converted native (i.e. JS/UNIX) time\n     */\n    osc.readTimeTag = function (dv, offsetState) {\n        var secs1900 = osc.readPrimitive(dv, \"getUint32\", 4, offsetState),\n            frac = osc.readPrimitive(dv, \"getUint32\", 4, offsetState),\n            native = (secs1900 === 0 && frac === 1) ? Date.now() : osc.ntpToJSTime(secs1900, frac);\n\n        return {\n            raw: [secs1900, frac],\n            native: native\n        };\n    };\n\n    /**\n     * Writes an OSC time tag (\"t\").\n     *\n     * Takes, as its argument, a time tag object containing either a \"raw\" or \"native property.\"\n     * The raw timestamp must conform to the NTP standard representation, consisting of two unsigned int32\n     * values. The first represents the number of seconds since January 1, 1900; the second, fractions of a second.\n     * \"Native\" JavaScript timestamps are specified as a Number representing milliseconds since January 1, 1970.\n     *\n     * @param {Object} timeTag time tag object containing either a native JS timestamp (in ms) or a NTP timestamp pair\n     * @return {Uint8Array} raw bytes for the written time tag\n     */\n    osc.writeTimeTag = function (timeTag) {\n        var raw = timeTag.raw ? timeTag.raw : osc.jsToNTPTime(timeTag.native),\n            arr = new Uint8Array(8), // Two Unit32s.\n            dv = new DataView(arr.buffer);\n\n        osc.writeInt32(raw[0], dv, 0);\n        osc.writeInt32(raw[1], dv, 4);\n\n        return arr;\n    };\n\n    /**\n     * Produces a time tag containing a raw NTP timestamp\n     * relative to now by the specified number of seconds.\n     *\n     * @param {Number} secs the number of seconds relative to now (i.e. + for the future, - for the past)\n     * @param {Number} now the number of milliseconds since epoch to use as the current time. Defaults to Date.now()\n     * @return {Object} the time tag\n     */\n    osc.timeTag = function (secs, now) {\n        secs = secs || 0;\n        now = now || Date.now();\n\n        var nowSecs = now / 1000,\n            nowWhole = Math.floor(nowSecs),\n            nowFracs = nowSecs - nowWhole,\n            secsWhole = Math.floor(secs),\n            secsFracs = secs - secsWhole,\n            fracs = nowFracs + secsFracs;\n\n        if (fracs > 1) {\n            var fracsWhole = Math.floor(fracs),\n                fracsFracs = fracs - fracsWhole;\n\n            secsWhole += fracsWhole;\n            fracs = fracsFracs;\n        }\n\n        var ntpSecs = nowWhole + secsWhole + osc.SECS_70YRS,\n            ntpFracs = Math.round(osc.TWO_32 * fracs);\n\n        return {\n            raw: [ntpSecs, ntpFracs]\n        };\n    };\n\n    /**\n     * Converts OSC's standard time tag representation (which is the NTP format)\n     * into the JavaScript/UNIX format in milliseconds.\n     *\n     * @param {Number} secs1900 the number of seconds since 1900\n     * @param {Number} frac the number of fractions of a second (between 0 and 2^32)\n     * @return {Number} a JavaScript-compatible timestamp in milliseconds\n     */\n    osc.ntpToJSTime = function (secs1900, frac) {\n        var secs1970 = secs1900 - osc.SECS_70YRS,\n            decimals = frac / osc.TWO_32,\n            msTime = (secs1970 + decimals) * 1000;\n\n        return msTime;\n    };\n\n    osc.jsToNTPTime = function (jsTime) {\n        var secs = jsTime / 1000,\n            secsWhole = Math.floor(secs),\n            secsFrac = secs - secsWhole,\n            ntpSecs = secsWhole + osc.SECS_70YRS,\n            ntpFracs = Math.round(osc.TWO_32 * secsFrac);\n\n        return [ntpSecs, ntpFracs];\n    };\n\n    /**\n     * Reads the argument portion of an OSC message.\n     *\n     * @param {DataView} dv a DataView instance to read from\n     * @param {Object} offsetState the offsetState object that stores the current offset into dv\n     * @param {Object} [options] read options\n     * @return {Array} an array of the OSC arguments that were read\n     */\n    osc.readArguments = function (dv, options, offsetState) {\n        var typeTagString = osc.readString(dv, offsetState);\n        if (typeTagString.indexOf(\",\") !== 0) {\n            // Despite what the OSC 1.0 spec says,\n            // it just doesn't make sense to handle messages without type tags.\n            // scsynth appears to read such messages as if they have a single\n            // Uint8 argument. sclang throws an error if the type tag is omitted.\n            throw new Error(\"A malformed type tag string was found while reading \" +\n                \"the arguments of an OSC message. String was: \" +\n                typeTagString, \" at offset: \" + offsetState.idx);\n        }\n\n        var argTypes = typeTagString.substring(1).split(\"\"),\n            args = [];\n\n        osc.readArgumentsIntoArray(args, argTypes, typeTagString, dv, options, offsetState);\n\n        return args;\n    };\n\n    // Unsupported, non-API function.\n    osc.readArgument = function (argType, typeTagString, dv, options, offsetState) {\n        var typeSpec = osc.argumentTypes[argType];\n        if (!typeSpec) {\n            throw new Error(\"'\" + argType + \"' is not a valid OSC type tag. Type tag string was: \" + typeTagString);\n        }\n\n        var argReader = typeSpec.reader,\n            arg = osc[argReader](dv, offsetState);\n\n        if (options.metadata) {\n            arg = {\n                type: argType,\n                value: arg\n            };\n        }\n\n        return arg;\n    };\n\n    // Unsupported, non-API function.\n    osc.readArgumentsIntoArray = function (arr, argTypes, typeTagString, dv, options, offsetState) {\n        var i = 0;\n\n        while (i < argTypes.length) {\n            var argType = argTypes[i],\n                arg;\n\n            if (argType === \"[\") {\n                var fromArrayOpen = argTypes.slice(i + 1),\n                    endArrayIdx = fromArrayOpen.indexOf(\"]\");\n\n                if (endArrayIdx < 0) {\n                    throw new Error(\"Invalid argument type tag: an open array type tag ('[') was found \" +\n                        \"without a matching close array tag ('[]'). Type tag was: \" + typeTagString);\n                }\n\n                var typesInArray = fromArrayOpen.slice(0, endArrayIdx);\n                arg = osc.readArgumentsIntoArray([], typesInArray, typeTagString, dv, options, offsetState);\n                i += endArrayIdx + 2;\n            } else {\n                arg = osc.readArgument(argType, typeTagString, dv, options, offsetState);\n                i++;\n            }\n\n            arr.push(arg);\n        }\n\n        return arr;\n    };\n\n    /**\n     * Writes the specified arguments.\n     *\n     * @param {Array} args an array of arguments\n     * @param {Object} options options for writing\n     * @return {Uint8Array} a buffer containing the OSC-formatted argument type tag and values\n     */\n    osc.writeArguments = function (args, options) {\n        var argCollection = osc.collectArguments(args, options);\n        return osc.joinParts(argCollection);\n    };\n\n    // Unsupported, non-API function.\n    osc.joinParts = function (dataCollection) {\n        var buf = new Uint8Array(dataCollection.byteLength),\n            parts = dataCollection.parts,\n            offset = 0;\n\n        for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            osc.copyByteArray(part, buf, offset);\n            offset += part.length;\n        }\n\n        return buf;\n    };\n\n    // Unsupported, non-API function.\n    osc.addDataPart = function (dataPart, dataCollection) {\n        dataCollection.parts.push(dataPart);\n        dataCollection.byteLength += dataPart.length;\n    };\n\n    osc.writeArrayArguments = function (args, dataCollection) {\n        var typeTag = \"[\";\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            typeTag += osc.writeArgument(arg, dataCollection);\n        }\n\n        typeTag += \"]\";\n\n        return typeTag;\n    };\n\n    osc.writeArgument = function (arg, dataCollection) {\n        if (osc.isArray(arg)) {\n            return osc.writeArrayArguments(arg, dataCollection);\n        }\n\n        var type = arg.type,\n            writer = osc.argumentTypes[type].writer;\n\n        if (writer) {\n            var data = osc[writer](arg.value);\n            osc.addDataPart(data, dataCollection);\n        }\n\n        return arg.type;\n    };\n\n    // Unsupported, non-API function.\n    osc.collectArguments = function (args, options, dataCollection) {\n        if (!osc.isArray(args)) {\n            args = typeof args === \"undefined\" ? [] : [args];\n        }\n\n        dataCollection = dataCollection || {\n            byteLength: 0,\n            parts: []\n        };\n\n        if (!options.metadata) {\n            args = osc.annotateArguments(args);\n        }\n\n        var typeTagString = \",\",\n            currPartIdx = dataCollection.parts.length;\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            typeTagString += osc.writeArgument(arg, dataCollection);\n        }\n\n        var typeData = osc.writeString(typeTagString);\n        dataCollection.byteLength += typeData.byteLength;\n        dataCollection.parts.splice(currPartIdx, 0, typeData);\n\n        return dataCollection;\n    };\n\n    /**\n     * Reads an OSC message.\n     *\n     * @param {Array-like} data an array of bytes to read from\n     * @param {Object} [options] read options\n     * @param {Object} [offsetState] an offsetState object that stores the current offset into dv\n     * @return {Object} the OSC message, formatted as a JavaScript object containing \"address\" and \"args\" properties\n     */\n    osc.readMessage = function (data, options, offsetState) {\n        options = options || osc.defaults;\n\n        var dv = osc.dataView(data, data.byteOffset, data.byteLength);\n        offsetState = offsetState || {\n            idx: 0\n        };\n\n        var address = osc.readString(dv, offsetState);\n        return osc.readMessageContents(address, dv, options, offsetState);\n    };\n\n    // Unsupported, non-API function.\n    osc.readMessageContents = function (address, dv, options, offsetState) {\n        if (address.indexOf(\"/\") !== 0) {\n            throw new Error(\"A malformed OSC address was found while reading \" +\n                \"an OSC message. String was: \" + address);\n        }\n\n        var args = osc.readArguments(dv, options, offsetState);\n\n        return {\n            address: address,\n            args: args.length === 1 && options.unpackSingleArgs ? args[0] : args\n        };\n    };\n\n    // Unsupported, non-API function.\n    osc.collectMessageParts = function (msg, options, dataCollection) {\n        dataCollection = dataCollection || {\n            byteLength: 0,\n            parts: []\n        };\n\n        osc.addDataPart(osc.writeString(msg.address), dataCollection);\n        return osc.collectArguments(msg.args, options, dataCollection);\n    };\n\n    /**\n     * Writes an OSC message.\n     *\n     * @param {Object} msg a message object containing \"address\" and \"args\" properties\n     * @param {Object} [options] write options\n     * @return {Uint8Array} an array of bytes containing the OSC message\n     */\n    osc.writeMessage = function (msg, options) {\n        options = options || osc.defaults;\n\n        if (!osc.isValidMessage(msg)) {\n            throw new Error(\"An OSC message must contain a valid address. Message was: \" +\n                JSON.stringify(msg, null, 2));\n        }\n\n        var msgCollection = osc.collectMessageParts(msg, options);\n        return osc.joinParts(msgCollection);\n    };\n\n    osc.isValidMessage = function (msg) {\n        return msg.address && msg.address.indexOf(\"/\") === 0;\n    };\n\n    /**\n     * Reads an OSC bundle.\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} [options] read optoins\n     * @param {Object} [offsetState] an offsetState object that stores the current offset into dv\n     * @return {Object} the bundle or message object that was read\n     */\n    osc.readBundle = function (dv, options, offsetState) {\n        return osc.readPacket(dv, options, offsetState);\n    };\n\n    // Unsupported, non-API function.\n    osc.collectBundlePackets = function (bundle, options, dataCollection) {\n        dataCollection = dataCollection || {\n            byteLength: 0,\n            parts: []\n        };\n\n        osc.addDataPart(osc.writeString(\"#bundle\"), dataCollection);\n        osc.addDataPart(osc.writeTimeTag(bundle.timeTag), dataCollection);\n\n        for (var i = 0; i < bundle.packets.length; i++) {\n            var packet = bundle.packets[i],\n                collector = packet.address ? osc.collectMessageParts : osc.collectBundlePackets,\n                packetCollection = collector(packet, options);\n\n            dataCollection.byteLength += packetCollection.byteLength;\n            osc.addDataPart(osc.writeInt32(packetCollection.byteLength), dataCollection);\n            dataCollection.parts = dataCollection.parts.concat(packetCollection.parts);\n        }\n\n        return dataCollection;\n    };\n\n    /**\n     * Writes an OSC bundle.\n     *\n     * @param {Object} a bundle object containing \"timeTag\" and \"packets\" properties\n     * @param {object} [options] write options\n     * @return {Uint8Array} an array of bytes containing the message\n     */\n    osc.writeBundle = function (bundle, options) {\n        if (!osc.isValidBundle(bundle)) {\n            throw new Error(\"An OSC bundle must contain 'timeTag' and 'packets' properties. \" +\n                \"Bundle was: \" + JSON.stringify(bundle, null, 2));\n        }\n\n        options = options || osc.defaults;\n        var bundleCollection = osc.collectBundlePackets(bundle, options);\n\n        return osc.joinParts(bundleCollection);\n    };\n\n    osc.isValidBundle = function (bundle) {\n        return bundle.timeTag !== undefined && bundle.packets !== undefined;\n    };\n\n    // Unsupported, non-API function.\n    osc.readBundleContents = function (dv, options, offsetState, len) {\n        var timeTag = osc.readTimeTag(dv, offsetState),\n            packets = [];\n\n        while (offsetState.idx < len) {\n            var packetSize = osc.readInt32(dv, offsetState),\n                packetLen = offsetState.idx + packetSize,\n                packet = osc.readPacket(dv, options, offsetState, packetLen);\n\n            packets.push(packet);\n        }\n\n        return {\n            timeTag: timeTag,\n            packets: packets\n        };\n    };\n\n    /**\n     * Reads an OSC packet, which may consist of either a bundle or a message.\n     *\n     * @param {Array-like} data an array of bytes to read from\n     * @param {Object} [options] read options\n     * @return {Object} a bundle or message object\n     */\n    osc.readPacket = function (data, options, offsetState, len) {\n        var dv = osc.dataView(data, data.byteOffset, data.byteLength);\n\n        len = len === undefined ? dv.byteLength : len;\n        offsetState = offsetState || {\n            idx: 0\n        };\n\n        var header = osc.readString(dv, offsetState),\n            firstChar = header[0];\n\n        if (firstChar === \"#\") {\n            return osc.readBundleContents(dv, options, offsetState, len);\n        } else if (firstChar === \"/\") {\n            return osc.readMessageContents(header, dv, options, offsetState);\n        }\n\n        throw new Error(\"The header of an OSC packet didn't contain an OSC address or a #bundle string.\" +\n            \" Header was: \" + header);\n    };\n\n    /**\n     * Writes an OSC packet, which may consist of either of a bundle or a message.\n     *\n     * @param {Object} a bundle or message object\n     * @param {Object} [options] write options\n     * @return {Uint8Array} an array of bytes containing the message\n     */\n    osc.writePacket = function (packet, options) {\n        if (osc.isValidMessage(packet)) {\n            return osc.writeMessage(packet, options);\n        } else if (osc.isValidBundle(packet)) {\n            return osc.writeBundle(packet, options);\n        } else {\n            throw new Error(\"The specified packet was not recognized as a valid OSC message or bundle.\" +\n                \" Packet was: \" + JSON.stringify(packet, null, 2));\n        }\n    };\n\n    // Unsupported, non-API.\n    osc.argumentTypes = {\n        i: {\n            reader: \"readInt32\",\n            writer: \"writeInt32\"\n        },\n        h: {\n            reader: \"readInt64\",\n            writer: \"writeInt64\"\n        },\n        f: {\n            reader: \"readFloat32\",\n            writer: \"writeFloat32\"\n        },\n        s: {\n            reader: \"readString\",\n            writer: \"writeString\"\n        },\n        S: {\n            reader: \"readString\",\n            writer: \"writeString\"\n        },\n        b: {\n            reader: \"readBlob\",\n            writer: \"writeBlob\"\n        },\n        t: {\n            reader: \"readTimeTag\",\n            writer: \"writeTimeTag\"\n        },\n        T: {\n            reader: \"readTrue\"\n        },\n        F: {\n            reader: \"readFalse\"\n        },\n        N: {\n            reader: \"readNull\"\n        },\n        I: {\n            reader: \"readImpulse\"\n        },\n        d: {\n            reader: \"readFloat64\",\n            writer: \"writeFloat64\"\n        },\n        c: {\n            reader: \"readChar32\",\n            writer: \"writeChar32\"\n        },\n        r: {\n            reader: \"readColor\",\n            writer: \"writeColor\"\n        },\n        m: {\n            reader: \"readMIDIBytes\",\n            writer: \"writeMIDIBytes\"\n        },\n        // [] are special cased within read/writeArguments()\n    };\n\n    // Unsupported, non-API function.\n    osc.inferTypeForArgument = function (arg) {\n        var type = typeof arg;\n\n        // TODO: This is freaking hideous.\n        switch (type) {\n            case \"boolean\":\n                return arg ? \"T\" : \"F\";\n            case \"string\":\n                return \"s\";\n            case \"number\":\n                return \"f\";\n            case \"undefined\":\n                return \"N\";\n            case \"object\":\n                if (arg === null) {\n                    return \"N\";\n                } else if (arg instanceof Uint8Array ||\n                    arg instanceof ArrayBuffer) {\n                    return \"b\";\n                } else if (typeof arg.high === \"number\" && typeof arg.low === \"number\") {\n                    return \"h\";\n                }\n                break;\n        }\n\n        throw new Error(\"Can't infer OSC argument type for value: \" +\n            JSON.stringify(arg, null, 2));\n    };\n\n    // Unsupported, non-API function.\n    osc.annotateArguments = function (args) {\n        var annotated = [];\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i],\n                msgArg;\n\n            if (typeof (arg) === \"object\" && arg.type && arg.value !== undefined) {\n                // We've got an explicitly typed argument.\n                msgArg = arg;\n            } else if (osc.isArray(arg)) {\n                // We've got an array of arguments,\n                // so they each need to be inferred and expanded.\n                msgArg = osc.annotateArguments(arg);\n            } else {\n                var oscType = osc.inferTypeForArgument(arg);\n                msgArg = {\n                    type: oscType,\n                    value: arg\n                };\n            }\n\n            annotated.push(msgArg);\n        }\n\n        return annotated;\n    };\n\n    if (osc.isCommonJS) {\n        module.exports = osc;\n    }\n}());\n\n};"],
"names":["shadow$provide","global","require","module","exports","process","Buffer","osc","SECS_70YRS","TWO_32","defaults","metadata","unpackSingleArgs","isCommonJS","isNode","window","isElectron","versions","electron","isBufferEnv","isArray","osc.isArray","obj","Object","prototype","toString","call","isTypedArrayView","osc.isTypedArrayView","buffer","ArrayBuffer","isBuffer","osc.isBuffer","Long","undefined","TextDecoder","util","TextEncoder","dataView","osc.dataView","offset","length","DataView","Uint8Array","byteArray","osc.byteArray","buf","Error","JSON","stringify","nativeBuffer","osc.nativeBuffer","from","copyByteArray","osc.copyByteArray","source","target","set","len","Math","min","i","j","start","readString","osc.readString","dv","offsetState","charCodes","idx","byteLength","charCode","getUint8","push","decoder","withBuffer","withTextDecoder","raw","osc.readString.raw","str","sliceSize","String","fromCharCode","apply","slice","osc.readString.withTextDecoder","data","Int8Array","decode","osc.readString.withBuffer","writeString","osc.writeString","encoder","withTextEncoder","terminated","encodedStr","arr","charCodeAt","osc.writeString.withTextEncoder","encode","osc.writeString.withBuffer","readPrimitive","osc.readPrimitive","readerName","numBytes","val","writePrimitive","osc.writePrimitive","writerName","readInt32","osc.readInt32","writeInt32","osc.writeInt32","readInt64","osc.readInt64","high","low","unsigned","writeInt64","osc.writeInt64","readFloat32","osc.readFloat32","writeFloat32","osc.writeFloat32","readFloat64","osc.readFloat64","writeFloat64","osc.writeFloat64","readChar32","osc.readChar32","writeChar32","osc.writeChar32","readBlob","osc.readBlob","paddedLen","blob","writeBlob","osc.writeBlob","readMIDIBytes","osc.readMIDIBytes","midi","writeMIDIBytes","osc.writeMIDIBytes","bytes","readColor","osc.readColor","alpha","r","g","b","a","writeColor","osc.writeColor","color","round","readTrue","osc.readTrue","readFalse","osc.readFalse","readNull","osc.readNull","readImpulse","osc.readImpulse","readTimeTag","osc.readTimeTag","secs1900","frac","native","Date","now","ntpToJSTime","writeTimeTag","osc.writeTimeTag","timeTag","jsToNTPTime","osc.timeTag","secs","nowSecs","nowWhole","floor","secsWhole","fracs","fracsWhole","fracsFracs","ntpFracs","osc.ntpToJSTime","osc.jsToNTPTime","jsTime","readArguments","osc.readArguments","options","typeTagString","indexOf","argTypes","substring","split","args","readArgumentsIntoArray","readArgument","osc.readArgument","argType","typeSpec","argumentTypes","arg","reader","type","value","osc.readArgumentsIntoArray","fromArrayOpen","endArrayIdx","typesInArray","writeArguments","osc.writeArguments","argCollection","collectArguments","joinParts","osc.joinParts","dataCollection","parts","part","addDataPart","osc.addDataPart","dataPart","writeArrayArguments","osc.writeArrayArguments","typeTag","writeArgument","osc.writeArgument","writer","osc.collectArguments","annotateArguments","currPartIdx","typeData","splice","readMessage","osc.readMessage","byteOffset","address","readMessageContents","osc.readMessageContents","collectMessageParts","osc.collectMessageParts","msg","writeMessage","osc.writeMessage","isValidMessage","msgCollection","osc.isValidMessage","readBundle","osc.readBundle","readPacket","collectBundlePackets","osc.collectBundlePackets","bundle","packets","packet","packetCollection","collector","concat","writeBundle","osc.writeBundle","isValidBundle","bundleCollection","osc.isValidBundle","readBundleContents","osc.readBundleContents","packetSize","osc.readPacket","header","firstChar","writePacket","osc.writePacket","h","f","s","S","t","T","F","N","I","d","c","m","inferTypeForArgument","osc.inferTypeForArgument","osc.annotateArguments","annotated","msgArg","oscType"]
}
